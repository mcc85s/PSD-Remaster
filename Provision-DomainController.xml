# ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____  
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\   ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯   //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//  [ Secure Digits Plus LLC | Hybrid | Desired State Controller ]  \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯       _____________________________________________________        ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯        __/¯¯\__[ Dynamically Engineered Digital Security ]__/¯¯\__         ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\  _________________________ ________________ ___________________________________  //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯\\__//¯¯\\__//¯¯\\__// | Application Development | Virtualization | Network and Hardware Magistration | \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\  ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯  //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//   https://www.securedigitsplus.com | Server-Client | Seedling-Spawning Script    \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\___¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯   ¯¯¯¯¯¯¯¯¯¯¯¯¯   ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\   [ Provisional Author : Michael C Cook Sr. | "The Buck Stops Here" ]    //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//   ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
#//¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯  
#\\  [ Provision-DomainController ] @: Orchestrates the process of provisioning server prerequisites in order to install Hybrid-DSC 
#//   ____    ____    ____    ____    ____    ____    ____    ____    ____    ____    ____    ____    ____    ____    ____    ____    ____    ____      
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\___  
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
# ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯  
    
    "Security.Principal" , "Management.Automation" , "DirectoryServices" | % { IEX "Using Namespace System.$_" } 

    #Using Namespace System.Security.Principal
    #Using Namespace System.Management.Automation
    #Using Namespace System.DirectoryServices
    
    $ENV:PSModulePath.Split( ';' ) | % { GCI $_ -Recurse "Hybrid-DSC.psm1" } | % {
        
        IPMO $_.FullName
        
        If ( $? -ne $True ) { Write-Error "Module Not Loaded/Found" ; Read-Host "Press Enter to Exit" ; Exit }
        
        Sleep 1
                                                                                     #____    ____    ____    ____    ____    ____    ____              
}#____                                                                            ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\___          
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
    Function Get-FeatureList # Collects all server features that pertain to DSC   ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯  
    {#)______________________________________________________________________________/¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯      
        
        [ CmdLetBinding () ] Param ( [ Parameter ( Position = 0 ) ] [ Switch ] $Underscore )
                        
        $Return = @( "AD-Domain-Services" , "DHCP" , "DNS" , "GPMC" ; @( "" ; "-AdminCenter" , "-PowerShell" , "-Tools" | % { "-AD$_" } ; 
        "" , "-Tools" | % { "-ADDS$_" } ; "-DHCP" , "-DNS-Server" , "-Role-Tools" ) | % { "RSAT$_" } ;
        "" , "-AdminPack" , "-Deployment" , "-Transport"  | % { "WDS$_" } )

        If ( $Underscore ) { $Return = $Return.Replace( '-' , '_' ) }

        Return $Return
                                                                                     #____    ____    ____    ____    ____    ____    ____              
}#____                                                                            ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\___          
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
    Function Collect-FeaturesState # Determines Installation Loadout              ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯  
    {#)______________________________________________________________________________/¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯      

        [ CmdLetBinding () ] Param ( [ Parameter () ][ Switch ] $All )

        $Services = Get-FeatureList ; $GWF = Get-WindowsFeature ; $Array = @( ) ; $Table = [ Ordered ]@{ Installed = @( ) ; Available = @( ) }

        ForEach ( $I in $Services ) { $X = $GWF | ? { $_.Name -eq $I } | % { 
            If ( $_.InstallState -ne "Installed" ) { $Array += "$I [_]" ; $Table.Available += "$I [_]" }
            If ( $_.InstallState -eq "Installed" ) { $Array += "$I [X]" ; $Table.Installed += "$I [X]" } } }

        Return $( If ( !$All ) { $Table } If ( $All ) { $Array } )
                                                                                     #____    ____    ____    ____    ____    ____    ____              
}#____                                                                            ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\___          
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
    Function Enter-ServiceAccount # Allows entry / use of an AD service account   ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯  
    {#)______________________________________________________________________________//¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯      

        [ CmdLetBinding () ] Param (

            [ Parameter ( Position = 0 , ValueFromPipeline = $True ) ] [ String ] $DC      ,
            [ Parameter ( Position = 1 , ValueFromPipeline = $True ) ] [ String ] $Domain  ,
            [ Parameter ( Position = 2 , ValueFromPipeline = $True ) ] [ String ] $NetBIOS )

        $XAML = @"
<Window                               xmlns =                 "http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                                    xmlns:x =                              "http://schemas.microsoft.com/winfx/2006/xaml" 
                                      Title =                         "Secure Digits Plus LLC | Hybrid-DSC Service Login" 
                                      Width =                                                                       "350" 
                                     Height =                                                                       "250" 
                                 ResizeMode =                                                                  "NoResize" 
                      WindowStartupLocation =                                                              "CenterScreen"
                                    Topmost =                                                                      "True" >
    <GroupBox 
                                     Header =                           "Enter Directory Services Administration Account" 
                                      Width =                                                                       "330" 
                                     Height =                                                                       "220" 
                          VerticalAlignment =                                                                       "Top">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height = "2*" />
                <RowDefinition Height =  "1.25*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row = "0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width =    "*" />
                    <ColumnDefinition Width = "2.5*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition   Height = "*" />
                    <RowDefinition   Height = "*" />
                    <RowDefinition   Height = "*" />
                </Grid.RowDefinitions>
                <TextBlock                     Grid.Column = "0" Grid.Row = "0" Margin = "10" TextAlignment = "Right" >Username:</TextBlock>
                <TextBox     Name = "Username" Grid.Column = "1" Grid.Row = "0" Height = "24" Margin = "5" ></TextBox>
                <TextBlock                     Grid.Column = "0" Grid.Row = "1" Margin = "10" TextAlignment = "Right" >Password:</TextBlock>
                <PasswordBox Name = "Password" Grid.Column = "1" Grid.Row = "1" Height = "24" Margin = "5" PasswordChar = "*" ></PasswordBox>
                <TextBlock                     Grid.Column = "0" Grid.Row = "2" Margin = "10" TextAlignment = "Right" >Confirm:</TextBlock>
                <PasswordBox Name =  "Confirm" Grid.Column = "1" Grid.Row = "2" Height = "24" Margin = "5" PasswordChar = "*" ></PasswordBox>
            </Grid>
            <Grid Grid.Row = "1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width = "*" />
                    <ColumnDefinition Width = "*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <RadioButton Name = "Port_Toggle" Grid.Row = "0" Grid.Column = "0" Content = "Alternate Port / SSL" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBox     Name =  "Port_Entry" Grid.Row = "0" Grid.Column = "1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="120" IsEnabled="False">389</TextBox>
                <Button      Name =          "Ok" Content =     "Ok" Grid.Column = "0" Grid.Row = "1" Margin = "5" ></Button>
                <Button      Name =      "Cancel" Content = "Cancel" Grid.Column = "1" Grid.Row = "1" Margin = "5" ></Button>
            </Grid>
        </Grid>
    </GroupBox>
</Window>
"@
        $NamedElements = "Username" , "Password" , "Confirm" , "Port_Toggle" , "Port_Entry" , "Ok" , "Cancel"

        $0 = "Username" , "Password" , "Confirmation" ; $1 = $0 | % { "You must enter a $_" } ; $2 = $0 | % { "$_ Error" }
        $1[2] = $1[2].Replace( "You must enter a" , "Password Must Match the" ) 
        $1   += "Invalid information. All fields must be correct and valid." ; $2 += "Authentication Failure"

        $MSG  = 0..3 | % { "[ System.Windows.MessageBox ]::Show( '$( $1[$_] )' , '$( $2[$_] )' )" }

        $GUIX = Convert-XAMLtoWindow -Xaml $Xaml -NE $NamedElements -PassThru

        $GUIX.Port_Toggle.Add_Click({ $GUIX.Port_Entry.IsEnabled = $True })
        $GUIX.Cancel.Add_Click({ $GUIX.DialogResult = $False })
        $GUIX.Ok.Add_Click({

            $Port = $( If ( $GUIX.Port_Entry.IsEnabled -eq $True ) { $GUIX.Port_Entry.Text } Else { 389 } )
            $Cred = [ PSCredential ]::New( $GUIX.Username.Text , $GUIX.Password.SecurePassword )
            $AD   = "LDAP://$( $DC ):$Port/DC=$( $Domain.Split('.') -join ',DC=' )"
            $DX   = [ DirectoryEntry ]::New( "$AD" , $Cred.Username , $Cred.GetNetworkCredential().Password )

            If     ( $GUIX.Username.Text     -eq       $Null )                  { IEX $MSG[0] }
            ElseIf ( $GUIX.Password.Password -eq       $Null )                  { IEX $MSG[1] }
            ElseIf (  $GUIX.Confirm.Password -eq       $Null )                  { IEX $MSG[2] } 
            ElseIf ( $GUIX.Password.Password -notmatch $GUIX.Confirm.Password ) { IEX $MSG[2] }
            ElseIf ( $DX.Name -eq $Null )                                       { IEX $MSG[3] }

            Else { $GUIX.DialogResult = $True }
        })

        $Null = $GUIX.Username.Focus()

        $OP = Show-WPFWindow -GUI $GUIX

        If ( $OP -eq $True )
        { 
            Write-Theme -Action "Login [+]" "Successful" -Font 11
            Return [ PSCredential ]::New( $GUIX.Username.Text , $GUIX.Password.SecurePassword )
        }

        Else 
        { 
            Write-Theme -Action "Login [!]" "Failed"
        }
                                                                                     #____ -- ____ -- ____ -- ____ -- ____ -- ____ -- ____    ____      
}#____                                                                             __//¯¯\\__//==\\__/----\__//==\\__/----\__//==\\__/----\__//¯¯\\___  
#//¯¯\\___________________________________________________________________________/¯¯¯    ¯¯¯¯ ¯¯ ¯¯¯¯ ¯¯ ¯¯¯¯ ¯¯ ¯¯¯¯ ¯¯ ¯¯¯¯ ¯¯ ¯¯¯¯ ¯¯ ¯¯¯¯ ¯¯ ¯¯¯\\ 
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯        ____    ____ __ ____ __ ____ __ ____ __ ____ __ ____    ___// 
    Function Convert-ArrayToHereString   #_______________________________________________//¯¯\\__//¯¯\\==//¯¯\----/¯¯\\==//¯¯\----/¯¯\\==//¯¯\\__//¯¯¯  
    {#]__________________________________//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ -- ¯¯¯¯ -- ¯¯¯¯ -- ¯¯¯¯ -- ¯¯¯¯ -- ¯¯¯¯ -- ¯¯¯¯ -- ¯¯¯¯      
        
        [ CmdLetBinding () ] [ OutputType ( "String" ) ] Param ( [ Parameter ( Position = 0 , Mandatory = $True ) ] [ Array ] $Input )

        $Return = "" ; 0..( $Launch.Count - 1 ) | % { $Return += "$( $Launch[$_] )`n" } ; Return $Return

                                                                                     #____    ____    ____    ____    ____    ____    ____              
}#____                                                                            ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\___          
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
    Function Convert-XAMLToWindow # Modified, originally by Dr. Tobias Weltner    ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯  
    {#]______________________________________________________________________________/¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯      

        Param ( [ Parameter ( Mandatory ) ] [ String ] $XAML , [ String [] ] $NE = $Null , [ Switch ] $PassThru )

        If ( $XAML.Count -gt 1 ) { $XAML = Convert-ArrayToHereString -Input $XAML }

        @( "Framework" , "Core" | % { "Presentation$_" } ) + "WindowsBase" | % { Add-Type -AssemblyName $_ }
 
        $NR = [ XML.XMLReader ]::Create( [ IO.StringReader ] $XAML ) ; $OP = [ Windows.Markup.XAMLReader ]::Load( $NR )
        
        $NE | % { $OP | Add-Member -MemberType NoteProperty -Name $_ -Value $OP.FindName( $_ ) -Force }
 
        If ( $PassThru ) { $OP } Else { $Null = $GUI.Dispatcher.InvokeAsync( { $OP = $GUI.ShowDialog() ; SV -Name OP -Value $OP -Scope 1 } ).Wait() ; $OP }

                                                                                     #____    ____    ____    ____    ____    ____    ____              
}#____                                                                            ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\___          
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
    Function Show-WPFWindow # Modified, originally by Dr. Tobias Weltner          ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯  
    {#)______________________________________________________________________________//¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯      
        
        Param ( [ Parameter ( Mandatory ) ] [ Windows.Window ] $GUI )

        $OP = $Null ; $Null = $GUI.Dispatcher.InvokeAsync( { $OP = $GUI.ShowDialog() ; SV -Name OP -Value $OP -Scope 1 } ).Wait() ; $OP 
                                                                                     #____    ____    ____    ____    ____    ____    ____              
}#____                                                                            ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\___          
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
    #Function Provision-DomainController                                          #¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯  
    #{#)______________________________________________________________________________/¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯             
        
        $Schema    = "http://schemas.microsoft.com/winfx/2006/xaml"
        $Author    = "Secure Digits Plus LLC"

        $CS        = ( GCIM Win32_OperatingSystem ).Caption
        $B         = $False , $True 
        $YZ        = "[X]" , "[_]"

        $Glossary  = 
            "   `$W = 'Width'             " , "   `$H = 'Height'            " , "  `$MA = 'Margin'          " , 
            "  `$MN = 'Menu'              " , " `$MNI = 'MenuItem'          " , "  `$HD = 'Header'          " , 
            "  `$GB = 'GroupBox'          " , " `$GBI = 'GroupBoxItem'      " , "  `$CB = 'ComboBox'        " , 
            " `$CBI = 'ComboBoxItem'      " , " `$CHK = 'CheckBox'          " , "  `$TB = 'TextBox'         " , 
            " `$TBL = 'TextBlock'         " , "   `$G = 'Grid'              " , "  `$RD = 'RowDefinition'   " , 
            "  `$CD = 'ColumnDefinition'  " , "  `$GC = 'Grid.Column'       " , " `$GCS = 'Grid.ColumnSpan' " , 
            "  `$GR = 'Grid.Row'          " , " `$GRS = 'Grid.RowSpan'      " , "  `$SI = 'SelectedIndex'   " , 
            "  `$LA = 'Label'             " , "  `$BU = 'Button'            " , "  `$CO = 'Content'         " , 
            "   `$Q = 'Name'              "
            
        $Glossary | % { IEX $_ } ; $GRD , $GCD = $RD , $CD | % { "$G.$_`s" }
        $Glossary += " `$GRD = '$GRD'" , " `$GCD = '$GCD'" 

        $HAL , $HCAL , $VAL , $VCAL , $SP = 0..4 | % { [ Ordered ]@{ } }

        0..13 | % { $SP.Add( $_ , ( "    " * $_ ) ) }
                    
        $I =       "Left" ,   "Center" ,  "Right"
        $J =        "Top" ,   "Center" , "Bottom"
        $K = "Horizontal" , "Vertical" | % { $_ , "$_`Content" } | % { "$_`Alignment" }
        $L =     " `$HAL" ,   "`$HCAL" , " `$VAL" , "`$VCAL"

        0..2  | % {  $HAL.Add( $_ , "$( $K[0] ) = '$( $I[$_] )'" )
                    $HCAL.Add( $_ , "$( $K[1] ) = '$( $I[$_] )'" )
                     $VAL.Add( $_ , "$( $K[2] ) = '$( $J[$_] )'" )
                    $VCAL.Add( $_ , "$( $K[3] ) = '$( $J[$_] )'" ) }

        $VC , $VV = "Collapsed" , "Visible" | % { "Visibility = '$_'" }

        Write-Theme -Action "Loaded [+]" "WPF/XAML Glossary Definitions" 11 12 15
        
        $ST = Collect-FeaturesState -All

        Write-Theme -Action "Collected [+]" "Windows Server Features" 11 12 15

            # To clear, these: 
            # $W , $H , $MA , $MN , $MNI , $HD , $CHK , $CO , $BU , $Q , $GB , $GBI , $CB , $CBI , 
            # $TB , $TBL , $LA , $G , $RD , $CD , $SI , $GC , $GCS , $GR , $GRS = $Null


        Function Get-DomainType
        {
            Return "N/A" , "TreeDomain" , "ChildDomain" , "ChildDomain" , "N/A"
        }

    # ____            ____            ____            ____            ____            ____    ____    ____    ____    ____   \\__// 
    #//¯¯\\__________//¯¯\\__________//¯¯\\__________//¯¯\\__________//¯¯\\__________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
    #\\__//¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
        Function Get-DCPromoControl # Provides backend for reliable XAML Control  ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
        {#/¯¯¯\\___                                   ____    ____    ____    ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
              #¯¯¯\\__[  Declare Common Vars  ]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
                  #¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                 [ CmdLetBinding () ] Param (                                                                               #//¯¯\\ 
                                                                                                                            #\\__// 
                    [ ValidateSet ( 0 , 1 , 2 , 3 ) ][ Parameter ( Mandatory = $True ) ][ Int ] $DSCType = 0 )              #//¯¯\\ 
                                                                                                                            #\\__// 
                 $T = ( "N/A" , "TreeDomain" , "ChildDomain" , "ChildDomain" , "N/A" )[ $DSCType ]                          #//¯¯\\ 
                 Return [ PSCustomObject ]@{                                                                                #\\__// 
                                                                                                                            #//¯¯\\ 
                 # ______________________________________________________________________________ #                         #\\__// 
                 # [ Services ] # - Entries for [ Windows Server @: Desired State Configuration ] #                         #//¯¯\\ 
                 # ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ #                         #\\__// 
                                                                                                                            #//¯¯\\ 
                 AD_Domain_Services      = "" ; DHCP                     = "" ; DNS                     = "" ;              #\\__// 
                 GPMC                    = "" ; RSAT                     = "" ; RSAT_AD_AdminCenter     = "" ;              #//¯¯\\ 
                 RSAT_AD_PowerShell      = "" ; RSAT_AD_Tools            = "" ; RSAT_ADDS               = "" ;              #\\__// 
                 RSAT_ADDS_Tools         = "" ; RSAT_DHCP                = "" ; RSAT_DNS_Server         = "" ;              #//¯¯\\ 
                 RSAT_Role_Tools         = "" ; WDS                      = "" ; WDS_AdminPack           = "" ;              #\\__// 
                 WDS_Deployment          = "" ; WDS_Transport            = "" ;                                             #//¯¯\\ 
                                                                                                                            #\\__// 
                 # ______________________________________________________________________________ #                         #//¯¯\\ 
                 # [ Menu Items ] # Entries for [ Windows Server @: Desired State Configuration ] #                         #\\__// 
                 # ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ #                         #//¯¯\\ 
                                                                                                                            #\\__// 
                 Forest = "" ; Tree = "" ; Child = "" ; Clone = "" ; Process = $DSCType ;                                   #//¯¯\\ 
                                                                                                                            #\\__// 
                 # ________________________________________________________________________________ #                       #//¯¯\\ 
                 # [ ADDS-Deployment ] # - Entries for [ Active Directory @: Deployment / DCPromo ] #                       #\\__// 
                 # ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ #                       #//¯¯\\ 
                                                                                                                            #\\__// 
                 DomainType              = $T ; ForestMode              = "" ; DomainMode              = "" ;               #//¯¯\\ 
                 ParentDomainName        = "" ; DatabasePath            = "" ; SysvolPath              = "" ;               #\\__// 
                 LogPath                 = "" ; Credential              = "" ; DomainName              = "" ;               #//¯¯\\ 
                 DomainNetBIOSName       = "" ; NewDomainName           = "" ; NewDomainNetBIOSName    = "" ;               #\\__// 
                 SiteName                = "" ; ReplicationSourceDC     = "" ; InstallDNS              = "" ;               #//¯¯\\ 
                 CreateDNSDelegation     = "" ; NoGlobalCatalog         = "" ; CriticalReplicationOnly = "" ;               #\\__// 
                 Force      = $True ; NoRebootUponCompletion  = $False ; SafeModeAdministratorPassword = "" } }             #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[___ Parts Done Bro ____]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
    # ____            ____            ____            ____            ____            ____    ____    ____    ____    ____   \\__// 
    #//¯¯\\__________//¯¯\\__________//¯¯\\__________//¯¯\\__________//¯¯\\__________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
    #\\__//¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
        Function Get-DCPromoXAML # __________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
        {#/¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__/¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
                                                                                                                            #//¯¯\\ 
            [ CmdLetBinding () ] Param (                                                                                    #\\__// 
                [ Parameter ( Mandatory = $True , ParameterSetName = "0" ) ][ Switch ] $Split ,                             #//¯¯\\ 
                [ Parameter ( Mandatory = $True , ParameterSetName = "1" ) ][ Switch ] $HereString  )                       #\\__// 
                                                                                                                            #//¯¯\\ 
                $XML    = [ Ordered ]@{ }                                                                                   #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[_______ Header ________]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                $X      = @( 2 ; 0..4 | % { 13 } ; 10 , 13 , 9 ) | % { $SP[$_] }                                            #\\__// 
                                                                                                                            #//¯¯\\ 
                $Y      = "<Window" , "  xmlns = '$Schema/presentation'" , "xmlns:x = '$Schema'" ,                          #\\__// 
                          "  Title = '$Author | Hybrid - Desired State Controller Installation'" ,                          #//¯¯\\ 
                          "  $W = '800'" , " $H = '800'" , "$( $HAL[1] )" , "Topmost = 'True' " ,                           #\\__// 
                          "  WindowStartupLocation = 'CenterScreen' >"                                                      #//¯¯\\ 
                                                                                                                            #\\__// 
                $XML.Add( "00" , @( 0..8 | % { $X[$_] + $Y[$_] } ) )                                                        #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[_______ Framing _______]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                $X      = @( 2..4 ; 4 , 3 ) | % { $SP[$_] }                                                                 #\\__// 
                                                                                                                            #//¯¯\\ 
                $Y      = @( "<$G>" , "<$GRD>" ; '20' , '*' | % { "<$RD $H = '$_' />" } ; "</$GRD>" )                       #\\__// 
                                                                                                                            #//¯¯\\ 
                $XML.Add( "01" , @( 0..4 | % { $X[$_] + $Y[$_] } ) )                                                        #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[________ Menu _________]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                $Menu   = 'Forest' , 'Tree' , 'Child' , 'Clone'                                                             #\\__// 
                                                                                                                            #//¯¯\\ 
                $Action = "Domain" | % { "Forest" , "$_ Tree" , "$_ Child" , "$_`Controller" } | % { "Install-ADDS$_" }     #\\__// 
                                                                                                                            #//¯¯\\ 
                $X      = @( 3..5 ; 5 , 5 ; 5..3 ) | % { $SP[$_] }                                                          #\\__// 
                                                                                                                            #//¯¯\\ 
                $Y      = @( "<$MN $GR = '0' $H = '20' >" , "<$MNI $HD = 'New' >" ;                                         #\\__// 
                          0..3 | % { "<$MNI $Q = '$( $Menu[$_] )' $HD = '$( $Action[$_] )' />"} ; "</$MNI>" , "</$MN>" )    #//¯¯\\ 
                                                                                                                            #\\__// 
                $XML.Add( "02" , @( 0..7 | % { $X[$_] + $Y[$_] } ) )                                                        #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[______ Open Body ______]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                $X      = 3 , 12 , 13 , 10 , 10 , 13 , 13 | % { $SP[$_] }                                                   #\\__// 
                                                                                                                            #//¯¯\\ 
                $Y      = "<$GB" , "   $GR = '1'" , " $HD = '[ Hybrid-DSC Domain Service Configuration ]'" ,                #\\__// 
                          "$( $HAL[1] )" , "  $( $VAL[1] )" , "  $W = '760'" , " $H = '740' >"                              #//¯¯\\ 
                                                                                                                            #\\__// 
                $XML.Add( "03" , @( 0..6 | % { $X[$_] + $Y[$_] } ) )                                                        #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[_______ Framing _______]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                $X      = @( 4..7 ; 7 , 6 ; 6..8 ; 8 , 7 ) | % { $SP[$_] }                                                  #\\__// 
                                                                                                                            #//¯¯\\ 
                $Y      = @( "<$G>" , "<$G $GR = '1' $MA = '10' >" , "<$GRD>" ; '' , '10' | % { "<$RD $H = '$_*' />" } ;    #\\__// 
                           "</$GRD>" , "<$G $GR = '0' >" , "<$GCD>" ; 0..1 | % { "<$CD $W = '*' />" } ; "</$GCD>" )         #//¯¯\\ 
                                                                                                                            #\\__// 
                $XML.Add( "04" , @( 0..10 | % { $X[$_] + $Y[$_] } ) )                                                       #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[_____ Domain Mode _____]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                $LI     = @( )                                                                                              #\\__// 
                                                                                                                            #//¯¯\\ 
                $ED     = @( "00" , "03" ; "08" , 12 | % { $_ , "$_ R2" } ; 16 , 19 )                                       #\\__// 
                                                                                                                            #//¯¯\\ 
                $R2     = $( If ( $CS -like "*R2*" ) { 1 } Else { 0 } )                                                     #\\__// 
                                                                                                                            #//¯¯\\ 
                0..7    | % {                                                                                               #\\__// 
                                                                                                                            #//¯¯\\ 
                    $I  = $ED[$_]                                                                                           #\\__// 
                                                                                                                            #//¯¯\\ 
                    $J  = "False"                                                                                           #\\__// 
                                                                                                                            #//¯¯\\ 
                        If ( $CS -like "*$I*" ) { If ( $R2 -eq 1 -and $_ -in    3 , 5 ) { $J = "True" }                     #\\__// 
                                                  If ( $R2 -eq 0 -and $_ -notin 3 , 5 ) { $J = "True" } }                   #//¯¯\\ 
                                                                                                                            #\\__// 
                   $LI += "<$CBI $CO = 'Windows Server 20$I' IsSelected = '$J' />"                                          #//¯¯\\ 
                }                                                                                                           #\\__// 
                                                                                                                            #//¯¯\\ 
                $LI[0]  = $LI[0].Replace( "2000" ,"2000 ( Default )" )                                                      #\\__// 
                                                                                                                            #//¯¯\\ 
                ForEach ( $i in 0..( $LI.Count - 1 ) )                                                                      #\\__// 
                {                                                                                                           #//¯¯\\ 
                    $SX = 0..( $LI.Count - 1 ) | ? { $LI[$_] -like "*IsSelected = 'True'*" }                                #\\__// 
                }                                                                                                           #//¯¯\\ 
                                                                                                                            #\\__// 
                0..1 | % {                                                                                                  #//¯¯\\ 
                                                                                                                            #\\__// 
                    $J  = ( "Forest" , "Domain" )[$_]                                                                       #//¯¯\\ 
                                                                                                                            #\\__// 
                    $X  = @( 7 , 8 ; 0..7 | % { 9 } ; 8 , 7 ) | % { $SP[$_] }                                               #//¯¯\\ 
                                                                                                                            #\\__// 
                    $Y  = @( "<$GB $Q = '$J`Box' $HD = '$J Mode' $GC = '$_' $MA = '5' $VC >" ,                              #//¯¯\\ 
                          "<$CB $Q = '$J`Mode' $H = '24' $SI = '$SX' >" ; @( $LI ) ; "</$CB>" , "</$GB>" )                  #\\__// 
                                                                                                                            #//¯¯\\ 
                    $Z  = 0..11 | % { $X[$_] + $Y[$_] }                                                                     #\\__// 
                                                                                                                            #//¯¯\\ 
                    If ( $_ -eq 0 ) { $ForID = $Z } Else { $DomID = $Z } }                                                  #\\__// 
                                                                                                                            #//¯¯\\ 
                $ParID  = "Child" | % {                                                                                     #\\__// 
                                                                                                                            #//¯¯\\ 
                    $X  = @( 6 , 7 , 6 ) | % { $SP[$_] } ;                                                                  #\\__// 
                                                                                                                            #//¯¯\\ 
                    $Y  = "<$GB $Q = '$_`Box' $HD = '$_ Domain' $GC = '0' $MA = '5' $VC >" ,                                #\\__// 
                          "<$TB $Q = 'ParentDomainName' Text = '&lt;Domain Name&gt;' $H = '20' $MA = '5' />" , "</$GB>"     #//¯¯\\ 
                                                                                                                            #\\__// 
                    Return 0..2 | % { $X[$_] + $Y[$_] } }                                                                   #//¯¯\\ 
                                                                                                                            #\\__// 
                  $None = $SP[6] + "<$GB $Q = 'CloneBox' $HD = 'Clone Domain Controller' $MA = '5' $GCS = '2' $VC />"       #//¯¯\\ 
                                                                                                                            #\\__// 
                $XML.Add( "05" , @( $ForID ; $DomID ; $ParID ; $None ) )                                                    #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[_______ Framing _______]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                    $X  = @( 6 , 6 , 7 , 8 , 8 , 7 , 7 , 8 , 8 , 7 ) | % { $SP[$_] }                                        #\\__// 
                                                                                                                            #//¯¯\\ 
                    $Y  = @( "</$G>" , "<$G $GR = '1' >" , "<$GCD>" ; '' , '2.5' | % { "<$CD $W = '$_*' />" } ;"</$GCD>" ,  #\\__// 
                             "<$GRD>" ; '3.5' , '' | % { "<$RD $H = '$_*' />" } ; "</$GRD>" )                               #//¯¯\\ 
                                                                                                                            #\\__// 
                $XML.Add( "06" , @( 0..9 | % { $X[$_] + $Y[$_] } ) )                                                        #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[__ Services Selection _]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                    $FT = Get-FeatureList ; $FTL = Get-FeatureList -Underscore                                              #\\__// 
                                                                                                                            #//¯¯\\ 
                   $SVC = 0..16 | % {                                                                                       #\\__// 
                                                                                                                            #//¯¯\\ 
                    "<$TBL $GC = '0' $GR = '$_' $MA = '5' TextAlignment = 'Right' >$( $FT[$_] ):</$TBL>" ,                  #\\__// 
                    "<$CHK $GC = '1' $GR = '$_' $MA = '5' $Q = '$( $FTL[$_] )' IsEnabled = 'True' IsChecked = 'False' />" } #//¯¯\\ 
                                                                                                                            #\\__// 
                    $X  = @( 6..9 ; 9 , 8 , 8 ; 0..16 | % { 9 } ; 0..34 | % { 8 } ; 7 , 6 ) | % { $SP[$_] }                 #//¯¯\\ 
                                                                                                                            #\\__// 
                    $Y  = @( "<$GB $HD = 'Service Options' $GR = '0' $GC = '0' $MA = '5' >" , "<$G $GR = '0' $GC = '0' >" , #//¯¯\\ 
                             "<$GCD>" ; '5' , '' | % { "<$CD $W = '$_*' />" } ; "</$GCD>" , "<$GRD>" ;                      #\\__// 
                             0..16 | % { "<$RD $H =  '*' />" } ; "</$GRD>" ; @( $SVC ) ; "</$G>" , "</$GB>" )               #//¯¯\\ 
                                                                                                                            #\\__// 
                $XML.Add( "07" , @( 0..60 | % { $X[$_] + $Y[$_] } ) )                                                       #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________________       ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[_ Paths / Credentials / Names _]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                $VA = '10 , 0 , 10 , 0'                                                                                     #\\__// 
                                                                                                                            #//¯¯\\ 
                $BB = "BorderBrush = '{x:Null}'"                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
                $VX = @( "Database" , "Sysvol" , "Log" | % { "$_`Path" } ; "Credential" ;                                   #\\__// 
                @( "Domain" | % { $_ , "New$_" } | % { $_ , "$_`NetBIOS" } ; "Site" ) | % { "$_`Name" } ;                   #//¯¯\\ 
                "ReplicationSourceDC" )                                                                                     #\\__// 
                                                                                                                            #//¯¯\\ 
                $DomID = ForEach ( $k in 0..9 )                                                                             #\\__// 
                {                                                                                                           #//¯¯\\ 
                    $WX = $VX[$K]                                                                                           #\\__// 
                    If ( $K -eq 3 )                                                                                         #//¯¯\\ 
                    {                                                                                                       #\\__// 
                        "<$GB $GR = '3' $HD = '$WX' Name = '$WX`Box' $VV $BB >" , "<$G>" , "<$GCD>" ;                       #//¯¯\\ 
                        "" , "3" | % { "<$CD $W = '$_*' />" } ; "</$GCD>" ,                                                 #\\__// 
                        "<$BU $CO = '$WX' $Q = '$WX`Button' $GC = '0' />" ,                                                 #//¯¯\\ 
                        "<$TB $H = '20' $MA = '$VA' Name = '$WX' $GC = '1' />" , "</$G>" , "</$GB>"                         #\\__// 
                    }                                                                                                       #//¯¯\\ 
                    Else                                                                                                    #\\__// 
                    {                                                                                                       #//¯¯\\ 
                        "<$GB $GR = '$K' $HD = '$WX`' $Q = '$WX`Box' $VV $BB >" ,                                           #\\__// 
                        "<$TB $H = '20' $MA = '$VA' $Q = '$WX' />" , "</$GB>"                                               #//¯¯\\ 
                    }                                                                                                       #\\__// 
                }                                                                                                           #//¯¯\\ 
                                                                                                                            #\\__// 
                $X = @(6,7;0..9|%{8};7;0..2|%{7,8,7};7..10;10,9,9,9,8,7;0..5|%{7,8,7};6) | % { $SP[$_] }                    #//¯¯\\ 
                                                                                                                            #\\__// 
                $Y = @( "<$G $GR = '0' $GC = '1' $MA = '$VA' >" , "<$GRD>" ; 0..9 | % { "<$RD $H = '*' />" } ;              #//¯¯\\ 
                "</$GRD>" ; @( $DomID ) ; "</$G>" )                                                                         #\\__// 
                                                                                                                            #//¯¯\\ 
                $XML.Add( "08" , @( 0..50 | % { $X[$_] + $Y[$_] } ) )                                                       #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   ___________________________     ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[___ Role Designations ___]____//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                   $RCN = "Install DNS" , "Create DNS Delegation" , "No Global Catalog" , "Critical Replication Only"       #\\__// 
                   $RID = $RCN | % { $_.Replace( " " , "" ) }                                                               #//¯¯\\ 
                                                                                                                            #\\__// 
                 $Roles = 0..3 | % {                                                                                        #//¯¯\\ 
                    "<$TBL $GR = '$_' TextAlignment = 'Right' $MA = '5' IsEnabled = 'True' >$( $RCN[$_] ):</$TBL>" ,        #\\__// 
                    "<$CHK $Q = '$( $RID[$_] )' $GR = '$_' $GC = '1' $MA = '5' IsEnabled = 'True' IsChecked = 'False' />"   #//¯¯\\ 
                    }                                                                                                       #\\__// 
                                                                                                                            #//¯¯\\ 
                    $X  = @( 6..9 ; 9 , 9 , 9 , 8 , 8 , 9 , 9 ; 0..8 | % { 8 } ; 7 , 6 ) | % { $SP[$_] }                    #\\__// 
                                                                                                                            #//¯¯\\ 
                    $Y  = @( "<$GB $GR = '1' $HD = 'Roles' $MA = '5' >" , "<$G>" , "<$GRD>" ;                               #\\__// 
                          0..3 | % { "<$RD $H = '*' />" } ; "</$GRD>" , "<$GCD>" ; '5' , '' | % { "<$CD $W = '$_*' />" } ;  #//¯¯\\ 
                          "</$GCD>" ; @( $Roles ) ; "</$G>" ,  "</$GB>" )                                                   #\\__// 
                                                                                                                            #//¯¯\\ 
                $XML.Add( "09" , @( 0..21 | % { $X[$_] + $Y[$_] } ) )                                                       #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   ___________________________     ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[__ DSRM/Initialization __]____//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                $CF ,  $OK ,  $CA = "Confirm" , "Start" , "Cancel"                                                          #\\__// 
                $PW , $PWB , $PWC = "Password" | % { "SafeModeAdministrator$_" , "$_`Box" , "$_`Char" }                     #//¯¯\\ 
                                                                                                                            #\\__// 
                    $X  = @( 6..9 ; 9 , 8 , 8 , 9 , 9 , 8 , 8 , 9 , 8 , 8 , 9 , 8 , 8 ; 8..6 ) | % { $SP[$_] }              #//¯¯\\ 
                                                                                                                            #\\__// 
                    $Y  = @( "<$GB $GR = '1' $GC = '1' $HD = 'Initialization' $MA = '5' >" , "<$G>" , "<$GRD>" ;            #//¯¯\\ 
                          0..1 | % { "<$RD $H = '*' />" } ; "</$GRD>" , "<$GCD>" ; 0..1 | % { "<$CD $W = '*' />" } ;        #\\__// 
                          "</$GCD>" )                                                                                       #//¯¯\\ 
                                                                                                                            #\\__// 
                    $C  = 0                                                                                                 #//¯¯\\ 
                    $Y += $PW , $CF | % { "<$GB $GR = '0' $GC = '$C' $HD = '$_' >" ,                                        #\\__// 
                                          "<$PWB $Q = '$_' $H = '20' $MA = '5' $PWC = '*' />" , "</$GB>" ; [ Void ]$C ++ }  #//¯¯\\ 
                                                                                                                            #\\__// 
                    $C  = 0                                                                                                 #//¯¯\\ 
                    $Y += $OK , $CA | % { "<$BU $Q = '$_' $GR = '1' $GC = '$C' $CO = '$_' $MA = '5'" ,                      #\\__// 
                                          " $W = '100' $H = '20' />" -join '' ; [ Void ]$C ++ } ;                           #//¯¯\\ 
                                                                                                                            #\\__// 
                    $Y += "</$G>" , "</$GB>"                                                                                #//¯¯\\ 
                                                                                                                            #\\__// 
                $XML.Add( "10" , @( 0..19 | % { $X[$_] + $Y[$_] } ) )                                                       #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   ___________________________     ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[_______ Framing _________]____//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                    $X  = @( 5..0 ) | % { $SP[$_] }                                                                         #\\__// 
                                                                                                                            #//¯¯\\ 
                    $Y  = "</$G>" , "</$G>" , "</$G>" , "</$GB>" , "</$G>" , "</Window>"                                    #\\__// 
                                                                                                                            #//¯¯\\ 
                $XML.Add( "11" , @( 0..5 | % { $X[$_] + $Y[$_] } ) )                                                        #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   ___________________________     ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[_____ Return XAML _______]____//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                            #//¯¯\\ 
                If ( $Split ) { $Return = $XML }                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
                If ( $HereString )                                                                                          #\\__// 
                {                                                                                                           #//¯¯\\ 
                    $Item = ForEach ( $i in 0..( $XML.Count - 1 ) )                                                         #\\__// 
                    {                                                                                                       #//¯¯\\ 
                        0..( $XML[$I].Count - 1 ) | % { $XML[$I][$_] }                                                      #\\__// 
                    }                                                                                                       #//¯¯\\ 
                    $Return = ""                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
                    0..( $Item.Count - 1 ) | % { $Return += "$( $Item[$_] )`n" }                                            #\\__// 
                }                                                                                                           #//¯¯\\ 
                Return $Return                                                                                              #\\__// 
            }                                                                                                               #//¯¯\\ 
                                                                                                                            #\\__// 
                                                                                                                            #//¯¯\\ 
             # ____   _________________________       ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__// 
             #//¯¯\\__[___ Parts Done Bro ____]______//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
             #¯    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯\\__// 
                                                                                                                             #¯¯¯¯  

            Function Get-DCPromoBoxControls
            {
                Return @( "Database" , "Sysvol" , "Log" | % { "$_`Path" } ; "Credential" ; 
                @( "Domain" | % { $_ , "New$_" } | % { $_ , "$_`NetBIOS" } ; "Site" ) | % { "$_`Name" } ; 
                             "ReplicationSourceDC" , "Forest" , "Domain" , "Child" , "Clone" ) | % { "$_`Box" }
            }

            Write-Theme -Action "Loading [~]" "Active Directory Configuration Utility" 11 12 15

            $Code          = Get-DCPromoControl -DSCType 0 
            $Named         = $Code | GM | ? Membertype -eq NoteProperty | % { $_.Name }
            $Face          = Get-DCPromoXAML -HereString
            $Boxes         = Get-DCPromoBoxControls

            $XamlWindow    = @{ XAML = $Face
                                NE   = @( $Named ; $Boxes ; "Start" , "Cancel" , "Confirm" , "CredentialButton" ) 
                                EA   = 0 }

            $CTRL          = Convert-XAMLtoWindow @XamlWindow

            $P             = $Code.Process

                #_______________________#
                # --------------------- #
                #   Service  Filters    #
                # --------------------- #
                #¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯#

            $SVC = Get-FeatureList -Underscore    

            ForEach ( $i in 0..16 )
            {  
                If ( $ST[$I].Split( ' ' )[1] -eq "[X]" )
                {
                    $CTRL.$( $SVC[$I] ) | % { $_.IsEnabled = $False ; $_.IsChecked =  $True }
                    $Code.$( $SVC[$I] ) = "Installed"
                }
                Else
                {
                    $CTRL.$( $SVC[$I] ) | % { $_.IsEnabled =  $True ; $_.IsChecked =  $True }
                    $Code.$( $SVC[$I] ) = "Available"
                }
            }

            Write-Theme -Action "Successful [+]" "Necessary services were selected" 11 12 15
                    
                Function Filter-DCPromoGUI
                {
                    [ CmdLetBinding ( ) ] Param ( [ ValidateSet ( 0 , 1 , 2 , 3 ) ][ Parameter ( Mandatory = $True ) ][ Int ] $Type = 0 )

                    $P         = $Type
                    $Code      = Get-DCPromoControl -DSCType $P

                    # Hides all boxed items

                    $Boxes     = Get-DCPromoBoxControls 
                    $Boxes     | % { $CTRL.$_.Visibility =  "Hidden" }

                    # Displays the correct top box content

                    $Top       = @{ 0 = "ForestBox" , "DomainBox" ; 1 = "ChildBox" , "DomainBox" ; 2 = "ChildBox" , "DomainBox" ; 3 = "CloneBox" }
                    $Top[$P]   | % { $CTRL.$_.Visibility = "Visible" }

                    # Determines the default / active states for DC roles

                    $Roles     = "InstallDNS" , "CreateDNSDelegation" , "NoGlobalCatalog" , "CriticalReplicationOnly"
                    $Roles     | % { $CTRL.$_ | % { $_.IsEnabled = $True ; $_.IsChecked = $False } }

                    $Enabled   = @{ 0 = 1 , 1 , 0 , 0 ; 1 = 1 , 1 , 1 , 0 ; 2 = 1 , 1 , 1 , 0 ; 3 = 1 , 1 , 1 , 1 }
                    $Checked   = @{ 0 = 1 , 0 , 0 , 0 ; 1 = 1 , 0 , 0 , 0 ; 2 = 1 , 1 , 0 , 0 ; 3 = 1 , 0 , 0 , 0 }

                    ForEach ( $i in 0..( $Roles.Count - 1 ) )
                    {
                        $CTRL.$( $Roles[$I] ) | % { $_.IsEnabled = $Enabled[$P][$I] ; $_.IsChecked = $Checked[$P][$I] }
                    }  
                    
                    # Determines the default / active states for DC Name Information

                    $DomaInfo  = @( @( "Domain" | % { $_ , "New$_" } | % { $_ , "$_`NetBIOS" } ; "Site" ) | % { "$_`Name" } ; "ReplicationSourceDC" , "Credential" ) | Sort
                    
                    $Visibile  = @{ 0 = 0,1,1,0,0,0,1 ; 1 = 1,0,0,1,1,0,1 ; 2 = 1,0,0,1,1,0,1 ; 3 = 1,1,0,0,0,1,1 }

                    ForEach ( $i in 0..( $DomaInfo.Count - 1 ) )
                    {
                        $CTRL."$( $DomaInfo[$I] )Box" | % { $_.Visibility = $Visibile[$P][$I] } 
                    }
                }

                Filter-DCPromoGUI -Type ( $Out.Process )

            $Roles     = "InstallDNS" , "CreateDNSDelegation" , "NoGlobalCatalog" , "CriticalReplicationOnly"

            ForEach ( $i in 0..3 ) 
            { 
                $Check = $CTRL.$( $Roles[$I] )

                If ( $Check.IsEnabled -eq $True ) 
                {
                    $Check | % { $_.Add_Checked({   $Out.$( $Roles[$I] ) =  $True })
                                 $_.Add_UnChecked({ $Out.$( $Roles[$I] ) = $False })
                    }
                }
            } # < - - - - - That's where I'm at. For right now.

    #  ____                                                                        ____    ____    ____    ____    ____  
    # //¯¯\\______________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
    # \\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
    #  ¯¯¯\\__[ Controls/Functions ]______________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯  
    #      ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯    ¯¯¯¯       

        $GUI.Process.Add_SelectionChanged({ ProcessSelection })

        $GUI.DCEntry.Add_Click({
            
            If ( $Report -ne $Null ) 
            { 
                $Report | % { 
                    
                    $ServiceAccount = @{ DC = $_.NetBIOS.Host ; Domain = $_.DNS ; NetBIOS = $_.NetBIOS.Name } 
                } 
            }

            Else
            { 
                $ServiceAccount = @{ DC = $DC ; Domain = $Domain ; NetBIOS = $NetBIOS } 
            }

            $DCCred             = @( Enter-ServiceAccount @ServiceAccount )
            $GUI.DCAdmin.Text   = $DCCred.Username
        
        })

        $GUI.Forest.Add_Click( { If ( $Out.Forest -ne 1 ) { $GUI.DialogResult = $False | Out-Null ; 

        $GUI.Cancel.Add_Click( { $GUI.DialogResult = $False } )

        $GUI.Ok.Add_Click({
                
                If ( $Process -eq 0 )
                {
                    "DomainName" ,
                    "DomainNetBIOSName" ,
                    "SiteName"

                If ( $Process -eq 1 )
                { 
                    If ( $GUI.Branch.Text -like "*$Domain*" )
                    {
                        [ System.Windows.MessageBox ]::Show( "Entry is too similar to main domain" , "Similar Domain Name Error" )
                    }

                    If ( $GUI.Branch.Text -like "*$NetBIOS*" )
                    {
                        [ System.Windows.MessageBox ]::Show( "Entry is too similar to main domain" , "Similar NetBIOS Name Error" )

                    }

                    Else
                    {
                        #$Out.DomainType          = "TreeDomain"
                        "DomainType"              = "TreeDomain"
                        "NewDomainName"           = "sideways.com"
                        "NewDomainNetBIOS"        = "SIDEWAYS"
                        "SiteName"		          = "Default-First-Site-Name"
                        $Out.DomainName           = ""
                        $Out.DomainNetBIOSName    = $GUI.NetBIOS
                        $Out.NewDomainName        = $GUI.Branch
                        $Out.NewDomainNetBIOSName = ""
                        $Out.ParentDomainName     = $GUI.Domain
                    }
                }

                If ( $Process -eq 2 )
                {
                    If ( $GUI.Branch.Text -like "" )
                    {
                        
                    }
                }

            ElseIf ( $GUI.DSRM_PW.Password -eq       $Null )                 { IEX $MSG[1] }
            ElseIf ( $GUI.DSRM_CF.Password -eq       $Null )                 { IEX $MSG[2] }
            ElseIf ( $GUI.DSRM_PW.Password -eq       $Null )                 { IEX $MSG[1] }
            ElseIf ( $GUI.DSRM_CF.Password -eq       $Null )                 { IEX $MSG[2] }
            ElseIf ( $GUI.DSRM_PW.Password -notmatch $GUI.DSRM_CF.Password ) { IEX $MSG[2] }
            Else { $GUI.DialogResult = $True }
        })


        $GUI.Process.SelectedIndex = 0 ; $Process                   = 0 ; $GUI.Branch.IsEnabled      = $False

        $GUI.DCAdmin  | % { $_.Text = $( If ( $DCCred.UserName -ne $Null ) { $DCCred.UserName } Else { "" } ) }
        $GUI.Database | % { $_.Text = "C:\Windows\NTDS"   }
        $GUI.Sysvol   | % { $_.Text = "C:\Windows\SYSVOL" }
        $GUI.Log      | % { $_.Text = "C:\Windows\SYSVOL" }
        $GUI.SiteName | % { $_.Text = $( If ( $Sitelink ) { $Sitelink } Else { "Default-First-Site-Name" } ) }
        $GUI.Domain   | % { $_.Text = $( If ( $Domain   ) { $Domain   } Else {   "Enter new Domain Name" } ) }
        $GUI.NetBIOS  | % { $_.Text = $( If ( $NetBIOS  ) { $NetBIOS  } Else {  "Enter new NetBIOS Name" } ) }

        $Null = $GUI.DSRM_PW.Focus()

        $OP   = Show-WPFWindow -GUI $GUI


        If ( $OP -eq $True )
        {
             Echo $Combo

             $Out.SafeModeAdministratorPassword  = $GUI.DSRM_PW.SecurePassword
             $Out.ForestMode                     = $GUI.ForestMode.SelectedIndex + 1
             $Out.DomainMode                     = $GUI.DomainMode.SelectedIndex + 1
        If ( $Out.ForestMode -in 7..8 ) {          $Out.ForestMode = 7 }
        If ( $Out.DomainMode -in 7..8 ) {          $Out.DomainMode = 7 }
             $Out.Credential                     = $DCCred
             $Out.DatabasePath                   = $GUI.Database.Text
             $Out.SysvolPath                     = $GUI.Sysvol.Text 
             $Out.LogPath                        = $GUI.Log.Text
             $Out.SiteName                       = $GUI.SiteName.Text
             $Out.DomainName                     = $GUI.Domain.Text
             $Out.DomainNetBIOSName              = $GUI.NetBIOS.Text

             $Out | GM | ? { $_.MemberType -eq "NoteProperty" } | Select Name

             Echo $Out
             Read-Host "Correct?"
        }

        Else { Write-Theme -Action "[!] Exception" "Either the user cancelled, or the dialogue failed" }
        
    }
             $Names = $Out | GM | ? { $_.MemberType -eq "NoteProperty" } | % { $_.Name }

             #11,0,2,3,5,9,10,12,14,15,7,1 # Domain Controller

             $Out | Select SafeModeAdministratorPassword , CreateDNSDelegation , DatabasePath , DomainMode , DomainName , DomainNetBIOSName , ForestMode , InstallDNS , LogPath , NoRebootOnCompletion , SysvolPath , Force

             # ADDS New Forest / 13,0,3,4,5,6,8,9,10,12,15,7  # Forest

             $AD = @{   SafeModeAdministratorPassword = $Out.SafeModeAdministratorPassword
                                  CreateDnsDelegation = $Out.InstallDns
                                         DatabasePath = $Out.DatabasePath 
                                           DomainMode = $Out.DomainMode
                                           DomainName = $Out.DomainName
                                    DomainNetBIOSName = $Out.DomainNetBIOSName
                                           ForestMode = $Out.ForestMode
                                           InstallDns = $Out.InstallDNS
                                              LogPath = $Out.LogPath
                                 NoRebootOnCompletion = $Out.NoRebootUponCompletion
                                           SysvolPath = $Out.SysvolPath
                                                Force = $Out.Force
                    }

            $ADND = @{  
                        SafeModeAdministratorPassword = $Out.SafeModeAdministratorPassword
                                  CreateDNSDelegation = $Out.CreateDnsDelegation
                                         DatabasePath = $Out.DatabasePath
                                           DomainMode = $Out.DomainMode
                                           DomainName = $Out.DomainName
                                    DomainNetBIOSName = $Out.DomainNetBIOSName 
                                    
                     }

        #$ADDS = @( 'SkipPreChecks' , 'NewDomainName' , 'ParentDomainName' , 'SafeModeAdministratorPassword', 'ADPrepCredential' , 'AllowDomainReinstall' , 'CreateDnsDelegation'
        #'Credential' , 'DatabasePath' , 'DnsDelegationCredential' , 'NoDnsOnNetwork' , 'DomainMode' , 'DomainType' , 'NoGlobalCatalog' , 'InstallDns' , 'LogPath' ,
        #'NewDomainNetbiosName' , 'NoRebootOnCompletion' , 'ReplicationSourceDC' , 'SiteName' , 'SkipAutoConfigureDns' , 'SysvolPath' , 'Force' )

            # 11 , 0 , 2 , 3 , 5 , 9 , 10 , 12 , 14 , 15 , 7 , 1

            $ADDSC = @{               NoGlobalCatalog = $False 
                                  CreateDnsDelegation = $False 
                              CriticalReplicationOnly = $False 
                                         DatabasePath = “C:\Windows\NTDS”
                                           DomainName = $GUI.DomainName.Text 
                                           InstallDns = $True 
                                              LogPath = “C:\Windows\NTDS” 
                                 NoRebootOnCompletion = $False
                                             SiteName = $GUI.NetBIOS.Text
                                           SysvolPath = “C:\Windows\SYSVOL” 
                                                Force = $True 
                                           Credential = $Cred }

        }
