#_____________________________________________________________________________________________________________________________________________________
#//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\   ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯   //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//  [ Secure Digits Plus LLC | Hybrid | Desired State Controller ]  \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯     __________________________________________________________     ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯¯ -=-=-=-=-=-=-=[ Dynamically Engineered Digital Security ]-=-=-=-=-=-=--=-= ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯                                           ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//   Application Development | Virtualization | Network and Hardware Magistration   \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\   ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯   //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//   https://www.securedigitsplus.com | Server-Client | Seedling-Spawning Script    \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\___¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\   [ Provisional Author : Michael C Cook Sr. | "The Buck Stops Here" ]    //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//   ____    ____    ____    ____    ____    ____    ____    ____    ____   \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\
#\\  [ Install-Hybrid ] @: Installs the base folder and application prerequisites for initializing a Hybrid Desired State Controller Server  //  \\__//
#//__________________________________________________________________________________________________________________________________________\\__//  \\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#       Declare Namespaces    ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#                                 ¯¯¯¯    ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    Using Namespace System.Security.Principal #¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
# ____                                           //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#//  \\                                          \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\__//  \\
    Function Elevate-Script # If the user is an administrator, and the window is not, this will elevate the window. Non-Admins get booted here.  \\__//
    { #__________________________________________________________________________________________________________________________________________//  \\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        ( GWMI Win32_ComputerSystem ) | % { If ( $_.PartOfDomain -eq $True ) { $DC = 1 } Else { $DC = 0 } $Gate = 0 ; $Key = 0 }     #\__//¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
        If ( $DC = 1 ) { IPMO ActiveDirectory ;                                                                                          #/¯¯\\__//¯¯\\
                         $I = @( Get-ADPrincipalGroupMembership -Identity $Env:Username | % { $_.Name -like "*Admin*" } )                #\__//¯¯\\__//
                         If ( $I -contains $True ) { $Gate = 1 } }                                                                       #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
        If ( $DC = 0 ) { $I = ( [ WindowsPrincipal ] [ WindowsIdentity ]::GetCurrent() ).IsInRole( "Administrator" )                     #/¯¯\\__//¯¯\\
                         If ( $I -eq $True )       { $Gate = 1 } Else {  $Key = 1 } }                                                    #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        If ( ( $Key = 1 ) -and ( [ Int ] ( gcim Win32_OperatingSystem ).BuildNumber -ge 6000 ) )                                         #\__//¯¯\\__//
        {                                                                                                                                #/¯¯\\__//¯¯\\
            Echo "Attempting [~] Script Elevation" ;                                                                                     #\__//¯¯\\__//
            $MyInvocation | % { SAPS -FilePath PowerShell.exe -Verb Runas -Args "-File $( $_.MyCommand.Path ) $( $_.UnboundArguments )" }#/¯¯\\__//¯¯\\
                         If ( $? -eq $True ) { $Gate = 1 } Else { $Gate = 0 } }                                                          #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        If ( $Gate = 1 ) { Echo "Access [+] Granted" ; Set-ExecutionPolicy Bypass -Scope CurrentUser -Force -VB }                        #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        Else { "Access [!] Denied" ; Sleep -S 2 ; Read-Host "Press Enter to Exit" ; Exit } }                                             #\__//¯¯\\__//
# ____                                                                                                                        ___________#/¯¯\\__//¯¯\\
#//¯¯\\______________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    Function Wrap-Action # Ties this commandlet into Write-Output for styling strings    \\__//  \\__//  \\__//  \\__//  \\__//  \\__//  \\__//  \\__//
    { #__________________________________________________________________________________//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        [ CmdletBinding () ] Param (                                                                                                 #\__//¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            [ Parameter ( Position = 0 , Mandatory , ValueFromPipeline = $True ) ][ String ] $Type ,                                     #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            [ Parameter ( Position = 1 , Mandatory , ValueFromPipeline = $True ) ][ String ] $Info )                                     #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            $fs = " // " ; $bs = " \\ " ; $x = " " * ( 25 - $Type.Length ) ; $y = " " * ( 80 - $Info.Length )                            #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            Echo @( "" ; ( $fs + ( "¯-" * 54 ) + $bs ) ;                                                                                 #/¯¯\\__//¯¯\\
            "$( $bs + $x + $Type ) : $( $Info + $y + $fs )" ;                                                                            #\__//¯¯\\__//
            ( $fs + ( "-_" * 54 ) + $bs ) ; "" ) }                                                                                       #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
# ____                                                                                                                        ___________#/¯¯\\__//¯¯\\
#//¯¯\\______________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    Function Wrap-Array # Ties this commandlet into Write-Output for styling a string array  //  \\__//  \\__//  \\__//  \\__//  \\__//  \\__//  \\__//
    { #______________________________________________________________________________________\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        [ CmdletBinding () ] Param (                                                                                                 #\__//¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            [ Parameter ( Position = 0 , Mandatory , ValueFromPipeline = $True ) ] [ Array ] $Block )                                    #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
                $fs = " // " ; $bs = " \\ "                                                                                              #/¯¯\\__//¯¯\\
                Echo @( " " * 112 ; $fs + "=-" * 54 + $bs ; $bs + "-=" * 54 + $fs ) ;                                                    #\__//¯¯\\__//
                Echo $Block ; Echo @( $bs + "=-" * 54 + $fs ; $fs + "-=" * 54 + $bs ; " " * 112 ) }                                      #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
# ____                                                                                                                        ___________#/¯¯\\__//¯¯\\
#//¯¯\\______________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    Function Wrap-Section   #//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    { #__________________//¯¯\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        [ CmdLetBinding () ] Param (                                                                                                 #\__//¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            [Parameter ( Position = 0 , Mandatory , ValueFromPipeline = $True ) ] [ String ] $Section )                                  #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            $z = $Section ; $x = " " * 10 ; $y = " " * ( 94 - $z.Length ) ; Wrap-In ; Echo "$( $fs + $x + $z + $y + $bs )" ; Wrap-In }   #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
# ____                                                                                                                        ___________#/¯¯\\__//¯¯\\
#//¯¯\\______________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    Function Wrap-ItemIn    #//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    { #__________________//¯¯\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        [ CmdLetBinding () ] Param (                                                                                                 #\__//¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            [ Parameter ( Position = 0 , Mandatory , ValueFromPipeline = $True ) ] [ String ] $Type ,                                    #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            [ Parameter ( Position = 1 , Mandatory , ValueFromPipeline = $True ) ] [ String ] $Info )                                    #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            $x = " " * ( 23 - $Type.Length ) ; $y = " " * ( 78 - $Info.Length ) ; Echo "$( $bs + $x + $Type ) : $( $Info + $y + $fs )" } #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
# ____                                                                                                                        ___________#/¯¯\\__//¯¯\\
#//¯¯\\______________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    Function Wrap-ItemOut   #//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    { #__________________//¯¯\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        [ CmdLetBinding () ] Param (                                                                                                 #\__//¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            [ Parameter ( Position = 0 , Mandatory , ValueFromPipeline = $True ) ] [ String ] $Type ,                                    #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            [ Parameter ( Position = 1 , Mandatory , ValueFromPipeline = $True ) ][ String ] $Info )                                     #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
            $x = " " * ( 23 - $Type.Length ) ; $y = " " * ( 78 - $Info.Length ) ; Echo "$( $fs + $x + $Type ) : $( $Info + $y + $bs )" } #/¯¯\\__//¯¯\\
                                                                                                                                         #\__//¯¯\\__//
# ____                                                                                                                        ___________#/¯¯\\__//¯¯\\
#//¯¯\\______________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    Function Display-TrueColors # Draws this static string array on the screen ( Will replace with Math at some point )  \\  //¯¯\\__//¯¯\\__//¯¯\\__//
    { #__________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                        #\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
        Wrap-Array -Block @(                                                                                                 #\__//¯¯\\__//¯¯\\__//¯¯\\
        " //                                                                                                              \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         // -=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_ \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\                                     ][                                               //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         //   *     *     *     *     *     *   ][ -_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=- \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\      *     *     *     *     *      ][                                               //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         //   *     *     *     *     *     *   ][ =-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-= \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\      *     *     *     *     *      ][    Dynamically Engineered Digital Security    //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         //   *     *     *     *     *     *   ][ -=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_- \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\      *     *     *     *     *      ][                                               //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         //   *     *     *     *     *     *   ][ _-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_ \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\      *     *     *     *     *      ][    Application Development - Virtualization   //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         //   *     *     *     *     *     *   ][ -_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=- \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\      *     *     *     *     *      ][        Network & Hardware Magistration        //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         //   *     *     *     *     *     *   ][ =-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-= \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\                                     ][                                               //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         // -_-=-_-=_-=-_-=-_-=-_-=-_-=-_-=_-=-_][ -=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_- \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\                                                                                      //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         // -=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_[=]\_/[=]\_/[=]\_/[=]=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-_ \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\                                 | |               | |                                //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         // _-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=-[=]- H Y B R I D -[=]-=-_-=-_-=-_-=-_-=-_-=-_-=-_-=- \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\                                 | |  ¯¯¯¯¯¯¯¯¯¯¯  | |                                //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         // -_-=-_-=-_-=-_-=-[=]\_/[=]\_/[=]|=|-=-=- B Y -=-=-|=|[=]\_/[=]\_/[=]-_-=-_-=-_-=-_-= \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\                  | |                    ¯¯¯¯¯                    | |                 //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         // =-_-=-_-=-_-=-_-=[-] S E C U R E - D I G I T S - P L U S - L L C [-]=-_-=-_-=-_-=-_- \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\                   \  ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯  /                  //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         // -=-_-=-_-=[=]\_/[=]\_/[=]\_/[=]\_/[=]\__/[=]\__/[=]\_/[=]\_/[=]\_/[=]\_/[=]_-=-_-=-_ \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\           [=]                                                           [=]          //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         // _-=-_-=-_-[=]- 0 7 / 2 7 / 2 0 1 9  |  M I C H A E L  C  C O O K  S R  -[=]-_-=-_-=- \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //         \\           [=]  ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯  [=]          //           \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\         // _-=-_-=-_-[=]-=-_-=-_-=_-=-_-=-_-=-_-=-_-=-_-=_-=-_-=-_-=-_-=-_-=-_-=_-=[=]=-_-=-_-= \\           // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " //                                      __________________________________                                      \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\                                      [ A heightened sense of security ]                                      // " ; #¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯//¯¯\\
        " //                                      ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯                                      \\ " ) ; Sleep -S 2 } #\\__//
# ____                                                                                                                        ___________________//¯¯\\
#//¯¯\\______________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    Function Display-Foot # Same as the above, just using this string array below at the end of the script   //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    { #______________________________________________________________________________________________________\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                        #\\__//¯¯\\__//¯¯\\__//¯¯\\__// 
        Wrap-Array -Block @(                                                                                                 #\__//¯¯\\__//¯¯\\__//¯¯\\
        " // /¯¯\\__//¯¯\\__//¯¯\\    __________________________________________________________    //¯¯\\__//¯¯\\__//¯¯\ \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\ \__//¯¯\\__//¯¯\\__//    Secure Digits Plus LLC | Hybrid | Desired State Controller    \\__//¯¯\\__//¯¯\\__/ // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " // /¯¯\\__//¯¯\\__//¯¯      ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯      ¯¯\\__//¯¯\\__//¯¯\ \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\ \__//¯¯\\__//¯¯  -=-=-=-=-=-=-=[ Dynamically Engineered Digital Security ]-=-=-=-=-=-=--=-=  ¯¯\\__//¯¯\\__/ // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " // /¯¯\\__//¯¯\\    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯                                           ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    //¯¯\\__//¯¯\ \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\ \__//¯¯\\__//   Application Development | Virtualization | Network and Hardware Magistration   \\__//¯¯\\__/ // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " // /¯¯\\__//¯¯\\   ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯   //¯¯\\__//¯¯\ \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\ \__//¯¯\\__//   https://www.securedigitsplus.com | Server-Client | Seedling-Spawning Script    \\__//¯¯\\__/ // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " // /¯¯\\__//¯¯\\__ ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    //¯¯\\__//¯¯\ \\ " ; #\__//¯¯\\__//¯¯\\__//
        " \\ \__//¯¯\\__//¯¯\\__         You've just deployed a heightened sense of security          __//¯¯\\__//¯¯\\__/ // " ; #/¯¯\\__//¯¯\\__//¯¯\\
        " // /¯¯\\__//¯¯\\__//¯¯\\__________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\ \\ " ; #¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//
        " \\ \__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__/ // " ) ; Sleep -S 2 } #//¯¯\\
                                                                                                                                  #______________\\__//
# ____                                                                                                                        ___//¯¯\\__//¯¯\\__//¯¯\\
#//¯¯\\______________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    Function Convert-XAMLToWindow # Overloads a block of XAML strings to convert into interactive content dynamically    \\__//¯¯\\__//¯¯\\__//  \\__//
    { #\\________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                         #\__//¯¯\\__//¯¯\\__//¯¯\\__// 
        Param ( [ Parameter ( Mandatory ) ] [ String ]                    $XAML ,                                            #\__//¯¯\\__//¯¯\\__//¯¯\\
                                            [ String [] ] $NamedElement = $Null ,                                                #\__//¯¯\\__//¯¯\\__//
                                            [ Switch ]                $PassThru )                                                #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        @( "Framework" , "Core" | % { "Presentation$_" } ) + "WindowsBase" | % { Add-Type -AssemblyName $_ }                     #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        $Reader       = [ XML.XMLReader ]::Create([ IO.StringReader ] $XAML )                                                    #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        $Output       = [ Windows.Markup.XAMLReader ]::Load( $Reader )                                                           #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        $NamedElement | % { $Output | Add-Member -MemberType NoteProperty -Name $_ -Value $Output.FindName( $_ ) -Force }        #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        If ( $PassThru )  { $Output }                                                                                            #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        Else { $Null = $GUI.Dispatcher.InvokeAsync{ $Output = $GUI.ShowDialog() ;                                                #/¯¯\\__//¯¯\\__//¯¯\\
        SV -Name Output -Value $Output -Scope 1 }.Wait() ; $Output } }                                                           #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
# ____                                                                            _______________________________________________#\__//¯¯\\__//¯¯\\__//
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    Function Show-WPFWindow # Displays the previously overloaded XAML string \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    { #______________________________________________________________________//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
        Param ( [ Parameter ( Mandatory ) ] [ Windows.Window ] $GUI )                                                    #\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                             #\__//¯¯\\__//¯¯\\__//¯¯\\
        $Output = $Null ; $Null = $GUI.Dispatcher.InvokeAsync{ $Output = $GUI.ShowDialog()                                       #\__//¯¯\\__//¯¯\\__//
                                  SV -Name Output -Value $Output -Scope 1 }.Wait() ; $Output }                                       #\__//¯¯\\__//¯¯\\
# ____                                                                            ___________________________________________________//¯¯\\__//¯¯\\__//
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    Function Install-Hybrid # Provisions a base folder for Hybrid-DSC to install to  \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    { #______________________________________________________________________________//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\ 
        $Author      = "Secure Digits Plus LLC"                                                                          #\__//¯¯\\__//¯¯\\__//¯¯\\__//
        $Title       = "[ $Author | Hybrid ] Desired State Controller Installation"                                          #\__//¯¯\\__//¯¯\\__//¯¯\\
        $InPath    = ( gci "C:\Hybrid-Installation\Hybri" -Filter "*Resources" -EA 0 | Select FullName )                         #\__//¯¯\\__//¯¯\\__//
        $Banner      = "banner.png"                                                                                              #/¯¯\\__//¯¯\\__//¯¯\\
        $Background  = "background.jpg"                                                                                          #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
        If ( $Path -ne $Null ) { $Background = "$Path\$Background )" ; $Banner = "$Path\$Banner" }                               #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
        If ( $Path -eq $Null ) {                                                                                                 #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
            $Path    = ( "$Env:Temp\$Author" | % { NI $_ -ItemType Directory -Force -VB } ).FullName                             #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
            [ Net.ServicePointManager ]::SecurityProtocol = [ Net.SecurityProtocolType ]::TLS12                                  #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
            $Site    = "https://i.ibb.co/XJ7wvnN/$Banner" , "https://i.ibb.co/sRw9T8S/$Background"                               #\__//¯¯\\__//¯¯\\__//
            $Image   = $Banner , $Background                                                                                     #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
            $Out     = @( 0..1 | % { "$Path\$( $Image[$_] )" } )                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
            0..1 | % { IWR -URI "$( $Site[$_] )" -OutFile "$( $Out[$_] )" }                                                      #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
            ( $Banner , $Background ) = ( 0..1 | % { "$( $Out[$_] )" } )                                                         #/¯¯\\__//¯¯\\__//¯¯\\
        }                                                                                                                        #\__//¯¯\\__//¯¯\\__//
# ____                                                ___________________________________________________________________________#/¯¯\\__//¯¯\\__//¯¯\\
#//  \\______________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\
#             Dynamic XAML Content Definitions        ¯¯¯\\__________________________[ Cannot Add Commentary to Static String ]______________________//
        $XAML = @"
        <Window
                        xmlns                 =       "http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x               =                    "http://schemas.microsoft.com/winfx/2006/xaml"
                        Title                 =                                                          "$Title" 
                        Width                 =                                                             "640" 
                        Height                =                                                             "450" 
                        WindowStartupLocation =                                                    "CenterScreen"
                        Topmost               =                                                            "True" 
                        HorizontalAlignment   =                                                          "Center"
                        ResizeMode            =                                                        "NoResize" >
            <StackPanel>
                <StackPanel.Background>
                    <ImageBrush ImageSource   =                                                     "$Background" 
                                Stretch       =                                                   "UniformToFill" />
                </StackPanel.Background>
                <StackPanel
                        Height                =                                                             "250" >
                    <Image 
                        Width                 =                                                             "600" 
                        Height                =                                                             "250" 
                        Source                =                                                         "$Banner" 
                        HorizontalAlignment   =                                                          "Center" 
                        Margin                =                                                             "0,0" />
                </StackPanel>
                <StackPanel 
                        Height                =                                                             "120" >
                    <TextBlock
                        HorizontalAlignment   =                                                          "Center" 
                        FontSize              =                                                              "14"
                        FontWeight            =                                                            "Bold" 
                        Foreground            =                                                       "#FF84FF4A" 
                        FontFamily            =                                                        "Segoe UI" >
                        <TextBlock.Effect>
                            <DropShadowEffect
                                ShadowDepth   =                                                               "5"
                                Color         =                                                       "#FF5B5546" />
                        </TextBlock.Effect>
                            Enter an installation folder for Hybrid-DSC
                        </TextBlock>
                    <TextBox
                        Name                  =                                                         "Install"
                        Height                =                                                              "22" 
                        TextWrapping          =                                                            "Wrap" 
                        Width                 =                                                             "300" 
                        Margin                =                                                              "10" />
                </StackPanel>
                <StackPanel 
                    Orientation               =                                                      "Horizontal" 
                    FlowDirection             =                                                     "LeftToRight" 
                    VerticalAlignment         =                                                          "Bottom" 
                    HorizontalAlignment       =                                                          "Center" 
                    Height                    =                                                              "40" 
                    Margin                    =                                                     "145,0,145,0" >
                    <Button 
                        Name                  =                                                           "Start" 
                        Content               =                                                           "Start"  
                        HorizontalAlignment   =                                                            "Left" 
                        Height                =                                                              "20" 
                        Width                 =                                                             "170" />
                    <Button 
                        Name                  =                                                          "Cancel" 
                        Content               =                                                          "Cancel" 
                        HorizontalAlignment   =                                                           "Right" 
                        Height                =                                                              "20" 
                        Width                 =                                                             "170" />
                </StackPanel>
            </StackPanel>
        </Window>
"@ #________[ Return to Normal Script Mode ]__________________________________________________________________________________________________________
# ____                                                ___________________________________________________________________________#/¯¯\\__//¯¯\\__//¯¯\\
#//  \\______________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#    \\____[ Converts the XAML into a Window ]_______//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
        $GUI = Convert-XAMLtoWindow -Xaml $XAML -NamedElement "Install" , "Start" , "Cancel" -PassThru                   #\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                             #\__//¯¯\\__//¯¯\\__//¯¯\\
        $GUI.Cancel.Add_Click( { $GUI.DialogResult = $False } )                                                                  #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
        $GUI.Start.Add_Click( {                                                                                                  #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\    
        "Installation Location" | % { $1 = "You must enter a $_" ; $2 = "$_ Missing" }                                           #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
        If ( $GUI.Install.Text -eq "" ) { [ System.Windows.MessageBox ]::Show( $1 , $2 ) }                                       #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
        Else { $GUI.DialogResult = $True } })                                                                                    #\__//¯¯\\__//¯¯\\__//
# ____                                                ___________________________________________________________________________#/¯¯\\__//¯¯\\__//¯¯\\
#//  \\______________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#    \\___[ Synchronizes WPF with Window Element ]___//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
        $Output = Show-WPFWindow -GUI $GUI                                                                               #\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                             #\__//¯¯\\__//¯¯\\__//¯¯\\
        If ( $Output -eq $True )                                                                                                 #\__//¯¯\\__//¯¯\\__//
        {                                                                                                                        #/¯¯\\__//¯¯\\__//¯¯\\
            ( $Base , $Vendor , $Registry ) = ( $GUI.Install.Text , "Secure Digits Plus LLC" , "HKLM:\SOFTWARE\Policies" )       #\__//¯¯\\__//¯¯\\__//
            $BasePath = "$Registry\$Vendor"                                                                                      #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
            $Base | ? { ( Test-Path $_ ) -ne $True } | % {                                                                       #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                Wrap-Action "Creating" "[~] Installation Directory"                                                              #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                NI $_ -ItemType Directory                                                                                        #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                If ( $_ -eq $False )                                                                                             #/¯¯\\__//¯¯\\__//¯¯\\
                {                                                                                                                #\__//¯¯\\__//¯¯\\__//
                    Wrap-Action "Exception" "[!] The directory could not be created"                                             #/¯¯\\__//¯¯\\__//¯¯\\
                    Read-Host "Press Enter to Exit"                                                                              #\__//¯¯\\__//¯¯\\__//
                    Exit                                                                                                         #/¯¯\\__//¯¯\\__//¯¯\\
                }                                                                                                                #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
                Wrap-Action "Created" "[+] Installation Directory"                                                               #\__//¯¯\\__//¯¯\\__//
            }                                                                                                                    #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
            Sleep -M 100                                                                                                         #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
            $Base | ? { ( Test-Path $_ ) -eq $True } | % {                                                                       #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                $BasePath | ? { ( Test-Path $_ ) -eq $False } | % {                                                              #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                    Wrap-Action "Creating" "[~] Registry Entry for Installation path"                                            #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                    NI -Path $Registry -Name $Vendor -Credential $Cred                                                           #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                    If ( $? -ne $True )                                                                                          #/¯¯\\__//¯¯\\__//¯¯\\
                    {                                                                                                            #\__//¯¯\\__//¯¯\\__//
                        Wrap-Action "Exception" "[!] Registry Entry Creation Failed"                                             #/¯¯\\__//¯¯\\__//¯¯\\
                        Read-Host "Press Enter to Exit"                                                                          #\__//¯¯\\__//¯¯\\__//
                        Exit                                                                                                     #/¯¯\\__//¯¯\\__//¯¯\\
                    }                                                                                                            #\__//¯¯\\__//¯¯\\__//
                    ( "Hybrid-DSC" , $Base ) , ( "Installation Date" , ( Get-Date ) ) | % {                                      #/¯¯\\__//¯¯\\__//¯¯\\
                        SP -Path $BasePath -Name $_[0] -Value $_[1]                                                              #\__//¯¯\\__//¯¯\\__//
                        Wrap-Action "Created" "[+] $_"                                                                           #/¯¯\\__//¯¯\\__//¯¯\\
                    }                                                                                                            #\__//¯¯\\__//¯¯\\__//
                }                                                                                                                #/¯¯\\__//¯¯\\__//¯¯\\
            }                                                                                                                    #\__//¯¯\\__//¯¯\\__//
            Return $Base                                                                                                         #/¯¯\\__//¯¯\\__//¯¯\\
        }                                                                                                                        #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
        Else                                                                                                                     #\__//¯¯\\__//¯¯\\__//
        {                                                                                                                        #/¯¯\\__//¯¯\\__//¯¯\\
            Wrap-Action "Exception" "[!] The exited or the dialogue failed"                                                      #\__//¯¯\\__//¯¯\\__//
            Read-Host "Press Enter to Exit"                                                                                      #/¯¯\\__//¯¯\\__//¯¯\\
            Exit                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        }                                                                                                                        #/¯¯\\__//¯¯\\__//¯¯\\
    }                                                                                                                            #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
# ____                                                                            _______________________________________________#\__//¯¯\\__//¯¯\\__//
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    Function Populate-DSCRoot # [ Generates DSC Folder Structure relative to installation path ]     \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    { #______________________________________________________________________________________________//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
        $Base = ( gp "HKLM:\Software\Policies\Secure Digits Plus LLC" ).'Hybrid-DSC'                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//
        $Inst = @( gci "C:\Hybrid-Installation\Hybrid" ).FullName                                                            #\__//¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        Start $Base                                                                                                              #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        $Root = "Resources" , "Tools" , "Images" , "Profiles" , "Certificates" , "Applications"                                  #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        0..5 | % { "$Base\($_)$( $Root[$_] )" } | ? { ( Test-Path $_ ) -ne $True } | % { NI -Path $_ -ItemType Directory }       #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        $Root = ( gci $Base ).FullName                                                                                           #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        $Path = @{  0 = @() ; 1 = "Drivers" , "DISM++" , "VM" ;                                                                  #/¯¯\\__//¯¯\\__//¯¯\\
                    2 = @( "DC2016" ; @( "E" , "H" , "P" | % { "$_`64" ; "$_`86" } | % { "10$_" } ) )                            #\__//¯¯\\__//¯¯\\__//
                    3 = @() ; 4 = "Root" | % { "$_" , "CA" , "Auth$_" } ;                                                        #/¯¯\\__//¯¯\\__//¯¯\\
                    5 = "chrome" , "silverlight" , "jre" , "libre" , "mwb" , "flash" ,                                           #\__//¯¯\\__//¯¯\\__//
                    "air" , "reader" , "ccleaner" , "klite" ,  "tv" }                                                            #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        $File = @{  0 = @(   "Server" , "Client" | % { "Initialize-Hybrid$_.ps1" } ; "logo.bmp" , "bg.jpg" | % { "OEM$_" }       #/¯¯\\__//¯¯\\__//¯¯\\
                    "StartLayout.xml" ; "UEV-Profile.ps1" ) ; 1 = @() ; 2 = @() ; 3 = @() ; 4 = @() ; 5 = @() }                  #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
        ForEach ( $i in 0..5 )                                                                                                   #\__//¯¯\\__//¯¯\\__//
        {                                                                                                                        #/¯¯\\__//¯¯\\__//¯¯\\
            $R = $Root[$i] ; $P = $Path[$i] ; $C = $Path[$i].Count ; $F = $File[$i] ; $D = $File[$i].Count                       #\__//¯¯\\__//¯¯\\__//
            If ( ( $C -gt 1 ) -or ( $D -gt 1 ) )                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
            {                                                                                                                    #\__//¯¯\\__//¯¯\\__//
                If ( $C -gt 1 )                                                                                                  #/¯¯\\__//¯¯\\__//¯¯\\
                {                                                                                                                #\__//¯¯\\__//¯¯\\__//
                    ForEach ( $j in ( 0..( $C - 1 ) ) )                                                                          #/¯¯\\__//¯¯\\__//¯¯\\
                    {                                                                                                            #\__//¯¯\\__//¯¯\\__//
                        "$R\($j)$( $P[$j] )" | ? { ( Test-Path $_ ) -eq $False } | % { NI -Path $_ -ItemType Directory }         #/¯¯\\__//¯¯\\__//¯¯\\
                    }                                                                                                            #\__//¯¯\\__//¯¯\\__//
                }                                                                                                                #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                If ( $D -gt 1 )                                                                                                  #/¯¯\\__//¯¯\\__//¯¯\\
                {                                                                                                                #\__//¯¯\\__//¯¯\\__//
                    ForEach ( $k in ( 0..( $D - 1 ) ) )                                                                          #/¯¯\\__//¯¯\\__//¯¯\\
                    {                                                                                                            #\__//¯¯\\__//¯¯\\__//
                        $F[$k] | ? { ( Test-Path "$R\$_" ) -eq $False } | % { Robocopy "$( $Inst[$i] )" "$R" "$_" }              #/¯¯\\__//¯¯\\__//¯¯\\
                    }                                                                                                            #\__//¯¯\\__//¯¯\\__//
                }                                                                                                                #/¯¯\\__//¯¯\\__//¯¯\\
            }                                                                                                                    #\__//¯¯\\__//¯¯\\__//
        }                                                                                                                        #/¯¯\\__//¯¯\\__//¯¯\\
    }                                                                                                                            #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
# ____                                                                            _______________________________________________#\__//¯¯\\__//¯¯\\__//
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    Function Collect-Applications # Concatenates strings into an indexed hash table       ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    { #\_________________________________________________________________________________________\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
        $Base = ( gp "HKLM:\Software\Policies\Secure Digits Plus LLC" ).'Hybrid-DSC'                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                             #\__//¯¯\\__//¯¯\\__//¯¯\\
        If ( ( Test-Path $Base ) -ne $True )                                                                                     #\__//¯¯\\__//¯¯\\__//
        {                                                                                                                        #/¯¯\\__//¯¯\\__//¯¯\\
            Wrap-Action "Exception" "[!] Folder not found" ; Read-Host "Press Enter to Exit" ; Exit }                            #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
        If ( ( GCI $Base -EA 0 ).Count -eq 0 )                                                                                   #\__//¯¯\\__//¯¯\\__//
        {                                                                                                                        #/¯¯\\__//¯¯\\__//¯¯\\
            Wrap-Action "Exception" "[!] Folder found empty" ; Read-Host "Press Enter to Exit" ; Exit }                          #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
# ____                                ___________________________________________________________________________________________#/¯¯\\__//¯¯\\__//¯¯\\
#//  \\______________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#    \\_____[ Application Names ]________\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
        $N = @( @( "Google Chrome" , "Microsoft Silverlight" , "Java Runtime Environment" , "Libre Office Fresh" | % {   #\__//¯¯\\__//¯¯\\__//¯¯\\__//
        "$_ (x86)" , "$_ (x64)" } ) ;                                                                                        #\__//¯¯\\__//¯¯\\__//¯¯\\
        @( "Malwarebytes" ; @( "Flash" , "Air" + @( "Reader DC" | % { "$_" ; "$_ MUI" } ) | % { "Adobe $_" } ) +                 #\__//¯¯\\__//¯¯\\__//
        "CCleaner" , "K-Lite Codec Pack Full" , "Teamviewer 14" ) | % { "$_ (x22)" } )                                           #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
# ____                                ___________________________________________________________________________________________#/¯¯\\__//¯¯\\__//¯¯\\
#//  \\______________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#    \\____[ Application Versions ]______\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
        $V = @( 0..1 | % { "75.0.3770.142" } ; 0..1 | % { "5.1.50907.0" } ; 0..1 | % { "8.0.211" } ;                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//
        0..1 | % { "6.2.5" } ; "3.8.3.296511612" ; "32.0.0.223" ; "32.0.0.125" ; "2019.012.20064" ; "2019.012.20035" ;       #\__//¯¯\\__//¯¯\\__//¯¯\\
        "5.60.7307" ; "15.0.4" ; "14.4.2669" )                                                                                   #\__//¯¯\\__//¯¯\\__//
# ____                                ___________________________________________________________________________________________#/¯¯\\__//¯¯\\__//¯¯\\
#//  \\______________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#    \\____[ Application URLs ]__________\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
        $U = @(                                                                                                          #\__//¯¯\\__//¯¯\\__//¯¯\\__//
        @( "" , "64" | % {                                                                                                   #\__//¯¯\\__//¯¯\\__//¯¯\\
            "https://dl.google.com/tag/s/dl/chrome/install/googlechromestandaloneenterprise$_.msi" } ) +                         #\__//¯¯\\__//¯¯\\__//
        @( "" , "_x64" | % {                                                                                                         #\__//¯¯\\__//¯¯\\
        "https://download.microsoft.com/download/F/D/0/FD0B0093-DE8A-4C4E-BDC4-F0C56D72018C/50907.00/Silverlight$_.exe" } ) +            #\__//¯¯\\__//
        @( 7 , 9 | % {                                                                                                                   #/¯¯\\__//¯¯\\
        "https://javadl.oracle.com/webapps/download/AutoDL?BundleId=23872$_`_478a62b7d4e34b78b671c754eaaf38ab" } ) +                     #\__//¯¯\\__//
        @( ( "" , 86 ) , ( "_64" , 64 ) | % {                                                                                            #/¯¯\\__//¯¯\\
        "https://download.documentfoundation.org/libreoffice/stable/6.2.5/win/x86$( $_[0] )/LibreOffice_6.2.5_Win_x$( $_[1] ).msi" } ) + #\__//¯¯\\__//
        "https://downloads.malwarebytes.com/file/mb3/" ,                                                                                 #/¯¯\\__//¯¯\\
        "https://download.macromedia.com/get/flashplayer/pdc/32.0.0.223/install_flash_player_32_plugin.msi" ,                            #\__//¯¯\\__//
        "http://airdownload.adobe.com/air/win/download/32.0/AdobeAIRInstaller.exe" ,                                                     #/¯¯\\__//¯¯\\
        "http://ardownload.adobe.com/pub/adobe/reader/win/AcrobatDC/1901020064/AcroRdrDC1901020064_MUI.exe" ,                            #\__//¯¯\\__//
        "http://ftp.adobe.com/pub/adobe/reader/win/AcrobatDC/1901220035/AcroRdrDCUpd1901220035_MUI.msp" ,                                #/¯¯\\__//¯¯\\
        "https://download.ccleaner.com/ccsetup560.exe" ,                                                                                 #\__//¯¯\\__//
        "https://files3.codecguide.com/K-Lite_Codec_Pack_1504_Full.exe" ,                                                                #/¯¯\\__//¯¯\\
        "https://download.teamviewer.com/download/version_14x/TeamViewer_Setup.exe" )                                                    #\__//¯¯\\__//
# ____                                ___________________________________________________________________________________________________#/¯¯\\__//¯¯\\
#//  \\______________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#    \\___[ Application File Names ]_____\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
        $F = @( @( "chrome" , "silverlight" , "jre" , "libre" | % { "$_(x86)" , "$_(x64)" } ) ;                          #\__//¯¯\\__//¯¯\\__//¯¯\\__//
        @( "mwb" ; @( "flash" , "air" + @( "reader" | % { "$_" ; "$_`mui" } ) ) + "ccleaner" , "klite" , "tv" ) | % {        #\__//¯¯\\__//¯¯\\__//¯¯\\
        "$_(x22)" } )                                                                                                            #\__//¯¯\\__//¯¯\\__//
                                                                                                                                     #\__//¯¯\\__//¯¯\\
        $X = @( "msi" , "exe" , "msp" )[0,0,1,1,1,1,0,0,1,1,1,1,2,1,1,1]                                                             #/¯¯\\__//¯¯\\__//
                                                                                                                                     #\__//¯¯\\__//¯¯\\
        $P = @( ( GCI $Base -Filter "*Applications" -EA 0 ).FullName | % { ( GCI $_ ).FullName } )[0,0,1,1,3,3,4,4,5,6,7,8,8,9,10,2] #/¯¯\\__//¯¯\\__//
# ____                                ________________________________________________________________________________________________\__//¯¯\\__//¯¯\\
#//  \\______________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#    \\__[ Application Hash Values ]_____\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//__\\__//__\\__//¯¯\\__//¯¯\\
        $S =            "f5ae4e45ec177ee53513426aabef2d0c0967584c30327678afb6f77535718357" ,  #                 [ Google Chrome x86 ]//¯¯\\__//¯¯\\__//
                        "a5941959bf0f5058702252d411cf39c2982c751f5b662c48b651d94ce4a7ee19" ,  #                 [ Google Chrome x64 ]\\__//¯¯\\__//¯¯\\
                        "88e1b76bdf799478a72fa27db0bfe7bc5d02cc7e53675967399300448f0e266f" ,  #                   [ Silverlight x86 ]//¯¯\\__//¯¯\\__//
                        "8d263a6f42a378073b6f057f242a42076f9f4082340153c2e27ecc959c5036aa" ,  #                   [ Silverlight x64 ]\\__//¯¯\\__//¯¯\\
                        "47DE97325B8EA90EA9F93E1595CC7F843DA0C9C6E4C9532ABEA3A194CFB621D9" ,  #                          [ Java x86 ]//¯¯\\__//¯¯\\__//
                        "C18CF8F2776B69DC838440AADFAAE36F50717636F38EEC5F1E4A27A8CB4F20FB" ,  #                          [ Java x64 ]\\__//¯¯\\__//¯¯\\
                        "717fb9e17a3feb8af1662e668b919db86fab343303b78f88c7859003056ee010" ,  #                         [ Libre x86 ]//¯¯\\__//¯¯\\__//
                        "9b01f6f382dbb31367e12cfb0ad4c684546f00edb20054eeac121e7e036a5389" ,  #                         [ Libre x64 ]\\__//¯¯\\__//¯¯\\
                        "8fb48cc837e050197b3274d8a8857d0cb353aebadd1e67952af85879f2363a34" ,  #                  [ Malwarebytes x22 ]//¯¯\\__//¯¯\\__//
                        "ee34f7a2ecd40039738861fd331ff9d9c5320a33d61b62ae71e108b78f999892" ,  #                   [ Adobe Flash x22 ]\\__//¯¯\\__//¯¯\\
                        "6718308E10A45176155D0ECC8458BD3606308925B91F26A7D08C148CF52C9DB3" ,  #                     [ Adobe Air x22 ]//¯¯\\__//¯¯\\__//
                        "81953f3cf426cbe9e6702d1af7f727c59514c012d8d90bacfb012079c7da6d23" ,  #               [ Adobe Reader DC x22 ]\\__//¯¯\\__//¯¯\\
                        "67AAB19943FA63393F15E1354FACCE65BED476D1C2BB5D311DB8450614A33200" ,  #    [ Adobe Reader DC MUI/Update x22 ]//¯¯\\__//¯¯\\__//
                        "00be05f95e08eb4f181ccde15403e782150a616cb93fd74525c99920f53a2cea" ,  #                      [ CCleaner x22 ]\\__//¯¯\\__//¯¯\\
                        "1F6BDE89E752811FDC04492D0F73216720B625E54966B3E350659BABD9AD7A83" ,  #             [ K-Lite Codec Pack x22 ]//¯¯\\__//¯¯\\__//
                        "df26627cc29716b65a3ed72f78d59808244f9bc4ad2624657ddbee79d2baa422"    #                 [ Teamviewer 14 x22 ]\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
        $Item = @( 0..15 )                                                                                                       #/¯¯\\__//¯¯\\__//¯¯\\
        0..15 | % { $Item[$_] = @{ Name = "$($N[$_]) v$($V[$_])" ; File = "$($P[$_])\$($F[$_]).$($X[$_])" ;                      #\__//¯¯\\__//¯¯\\__//
        URL = "$($U[$_])" ; Sum = "$($S[$_])"} } Return $Item }                                                                  #/¯¯\\__//¯¯\\__//¯¯\\
# ____                                                                            _______________________________________________#\__//¯¯\\__//¯¯\\__//
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    Function Review-Applications # Allows for the user to check & verify the applications list   //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    { #__________________________________________________________________________________________\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                     #\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
        Switch( $Host.UI.PromptForChoice( "Application Template Review" , "Review Designated Application Template?" ,    #\__//¯¯\\__//¯¯\\__//¯¯\\__//
        [ System.Management.Automation.Host.ChoiceDescription [] ]@( '&Yes' , '&No' ) , [ Int ] 0 ) )                        #\__//¯¯\\__//¯¯\\__//¯¯\\
        {                                                                                                                        #\__//¯¯\\__//¯¯\\__//
            0 { Wrap-Action "Review" "[~] User chose to review the applications list"                                            #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                $Item = @( Collect-Applications )                                                                                #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
                $j = 0 ; $Item | % {                                                                                             #/¯¯\\__//¯¯\\__//¯¯\\
       "#\\¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\"#//¯¯\\__//
       "#// @ $( If ( $j -lt 10 ) { "$J " } Else { "$J" } ) $( "/\ \/ " * 20                                                            )//"#\\__//¯¯\\
       "#\\______________________________________________________________________________________________________________________________\\"#//¯¯\\__//
       "#//"                                                                                                                     #/¯¯\\__//¯¯\\__//¯¯\\
       "#\\  [ $(               $_.Name ) ]"                                                                                     #\__//¯¯\\__//¯¯\\__//
       "#//  =$( ( "-=" ) * ( ( $_.Name.Length / 2 ) ) )-="                                                                      #/¯¯\\__//¯¯\\__//¯¯\\
       "#\\        URL : $(      $_.URL )"                                                                                       #\__//¯¯\\__//¯¯\\__//
       "#//       File : $(     $_.File )"                                                                                       #/¯¯\\__//¯¯\\__//¯¯\\
       "#\\      C-Sum : $(      $_.Sum )"                                                                                       #\__//¯¯\\__//¯¯\\__//
       "#//"                                                                                                                     #/¯¯\\__//¯¯\\__//¯¯\\
                $Null = ( $j = $j + 1 ) }                                                                                        #\__//¯¯\\__//¯¯\\__//
                Read-Host "Press Enter to Continue" }                                                                            #/¯¯\\__//¯¯\\__//¯¯\\
                                                                                                                                 #\__//¯¯\\__//¯¯\\__//
            1 { Wrap-Action "Bypass" "[~] User chose to bypass the application review screen"                                    #/¯¯\\__//¯¯\\__//¯¯\\
                Sleep -S 1 }}}                                                                                                   #\__//¯¯\\__//¯¯\\__//
                                                                                                                                 #/¯¯\\__//¯¯\\__//¯¯\\
# ____                                                                            _______________________________________________#\__//¯¯\\__//¯¯\\__//
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//
    Function Download-Applications # Reaches out to the internet to retrieve the files listed above and verifies the file integrity  \\__//¯¯\\__//¯¯\\
    { #\_____________________________________________________________________________________________________________________________//¯¯\\__//¯¯\\__//
                                                                                                                             #\__//¯¯\\__//¯¯\\__//¯¯\\
        $Item  = @( Collect-Applications ) ; $Base  = ( GP "HKLM:\Software\Policies\Secure Digits Plus LLC" ).'Hybrid-DSC'       #\__//¯¯\\__//¯¯\\__//
                                                                                                                                     #\__//¯¯\\__//¯¯\\
        Wrap-Action "Downloading" "[+] Application Template" ; IPMO BITSTransfer ; $Total = [ System.Diagnostics.Stopwatch ]::StartNew() #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        $Time  = @( 0..15 ) ; 0..15 | % {                                                                                                #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
            If ( ( Test-Path $Item.File[$_] ) -ne $True )                                                                                #\__//¯¯\\__//
            {                                                                                                                            #/¯¯\\__//¯¯\\
                Wrap-Action "Downloading" "$( $Item.Name[$_] )" ; $Time[$_] = [ System.Diagnostics.Stopwatch ]::StartNew()               #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
                Start-BitsTransfer -Source $Item.URL[$_] -Destination $Item.File[$_] -TransferType Download -Description $Item.Name[$_]  #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
                If ( $? -eq $False ) { IWR -Uri $Item.URL[$_] -OutFile $Item.File[$_] }                                                  #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
                $Time[$_].Stop()                                                                                                         #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
                Write-Host -F Cyan "Time Elapsed : $( ( $Time[$_] | Select Elapsed ).Elapsed ) $( $Item.Name[$_] )" } }                  #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        $Total | % { $_.Stop() ; $T = $_.Elapsed }                                                                                       #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        $Size    = @( gci "$Base\(5)Applications" -Recurse -File | Select Length | % { $_.Length } | Measure -Sum ).Sum                  #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        $Rate    = ( ( $Size / 1MB ) / ( ( $T.Minutes * 60 ) + ( $T.Seconds ) ) | % { "{0:n3}" -f $_ } )                                 #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        Wrap-Action "Downloads Complete" "[ Total Time Elapsed @: $( $T.Elapsed ) @: $Rate MB/sec ]"                                     #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        0..15 | % { $ID = $( $Item.Name[$_] ) ;                                                                                          #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        If ( ( Test-Path $Item.File[$_] ) -ne $True ) { Wrap-Action "Exception" "[!] $ID Not Found" }                                    #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
        Else { $Hash = ( Get-FileHash -Path $Item.File[$_] -Algorithm SHA256 ).Hash                                                      #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
                    If ( $Hash -eq $Item.Sum[$_] ) { Wrap-Action "[+] Checksum Valid" "$ID" }                                            #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
                    Else { Wrap-Action "[!] Checksum Invalid" "$ID" ; RI $Item.File[$_] -Force -VB } } } }                               #\__//¯¯\\__//
                                                                                                                                         #/¯¯\\__//¯¯\\
# ____                                                                            _______________________________________________________#\__//¯¯\\__//
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
    Function Make-Decision # Checks for an existing installation path, and selects the corresponding workflow    //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
    { #\_________________________________________________________________________________________________________\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//
                                                                                                                             #\__//¯¯\\__//¯¯\\__//¯¯\\
        $BasePath = "HKLM:\Software\Policies\Secure Digits Plus LLC"                                                             #\__//¯¯\\__//¯¯\\__//
                                                                                                                                     #\__//¯¯\\__//¯¯\\
        If ( ( GP $BasePath -ea 0 ) -ne $Null )                                                                                      #/¯¯\\__//¯¯\\__//
                                                                                                                                     #\__//¯¯\\__//¯¯\\
        { ( $Base , $InstallDate ) = ( GP $BasePath -EA 0 | % { $_.'Hybrid-DSC' , $_."Installation Date" } )                         #/¯¯\\__//¯¯\\__//
                                                                                                                                     #\__//¯¯\\__//¯¯\\
            If ( ( ( $Base , $InstallDate ) -ne $Null ) -and ( Test-Path $Base ) -eq $True ) { Switch( $Host.UI.PromptForChoice(     #/¯¯\\__//¯¯\\__//
"Change / Refresh / Remove" ,                                                                                                        #\__//__\\__//__\\
" An existing installation was detected        
                                               
    [ Hybrid-DSC Location ]                    
    = = = = = = = = = = =                      
        $Base                                      
                                               
    [ Installation Date ]                      
    = = = = = = = = =                          
        $InstallDate                               
                                            " ,
                [ System.Management.Automation.Host.ChoiceDescription [] ]@( '&Change' , '&Refresh' , '&Remove' ) , [ Int ] 0 ) )    #\__//¯¯\\__//¯¯\\
                {                                                                                                                    #/¯¯\\__//¯¯\\__//
                    0 { Wrap-Action "Change" "[+] Selected"                                                                          #\__//¯¯\\__//¯¯\\
                        RI $BasePath ; RI $Base -Recurse -Force                                                                      #/¯¯\\__//¯¯\\__//
                        ( $Base , $BasePath , $InstallDate ) = $Null                                                                 #\__//¯¯\\__//¯¯\\
                        Install-Hybrid ; Populate-DSCRoot ; Review-Applications ; Download-Applications                              #/¯¯\\__//¯¯\\__//
                        Display-Foot ; Wrap-Action "Installation" "[+] Complete"                                                     #\__//¯¯\\__//¯¯\\
                        Read-Host "Press Enter to Exit" ; Exit }                                                                     #/¯¯\\__//¯¯\\__//
                                                                                                                                     #\__//¯¯\\__//¯¯\\
                    1 { Wrap-Action "Refresh" "[+] Selected"                                                                         #/¯¯\\__//¯¯\\__//
                        RI $Base -Recurse -Force ; NI $Base -ItemType Directory                                                      #\__//¯¯\\__//¯¯\\
                        Populate-DSCRoot ; Review-Applications ; Download-Applications                                               #/¯¯\\__//¯¯\\__//
                        Display-Foot ; Wrap-Action "Installation" "[+] Complete"                                                     #\__//¯¯\\__//¯¯\\
                        Read-Host "Press Enter to Exit" ; Exit }                                                                     #/¯¯\\__//¯¯\\__//
                                                                                                                                     #\__//¯¯\\__//¯¯\\
                    2 { Wrap-Action "Remove" "[+] Selected"                                                                          #/¯¯\\__//¯¯\\__//
                        RI $BasePath ; RI $Base -Recurse -Force                                                                      #\__//¯¯\\__//¯¯\\
                        Display-Foot ; Wrap-Action "Uninstallation" "[+] Complete"                                                   #/¯¯\\__//¯¯\\__//
                        Read-Host "Press Enter to Exit" ; Exit }                                                                     #\__//¯¯\\__//¯¯\\
                }                                                                                                                    #/¯¯\\__//¯¯\\__//
            }                                                                                                                        #\__//¯¯\\__//¯¯\\
                                                                                                                                     #/¯¯\\__//¯¯\\__//
            If ( $Base -ne $Null -and ( ( Test-Path $Base -EA 0 ) -eq $True ) -and ( ( GCI $Base ).Count -eq 0 ) )                   #\__//¯¯\\__//¯¯\\
            {                                                                                                                        #/¯¯\\__//¯¯\\__//
                Populate-DSCRoot ; Review-Applications ; Download-Applications ; Display-Foot ;                                      #\__//¯¯\\__//¯¯\\
                Read-Host "[+] Installation Complete" ; Exit }                                                                       #/¯¯\\__//¯¯\\__//
        }                                                                                                                            #\__//¯¯\\__//¯¯\\
                                                                                                                                     #/¯¯\\__//¯¯\\__//
        Else {  Install-Hybrid ; Populate-DSCRoot ; Review-Applications ; Download-Applications ; Display-Foot                       #\__//¯¯\\__//¯¯\\
                Read-Host "[+] Installation Complete" ; Exit } }                                                                     #/¯¯\\__//¯¯\\__//
                                                                                                                                     #\__//¯¯\\__//¯¯\\
# ____                                                                            ___________________________________________________#/¯¯\\__//¯¯\\__//
#//¯¯\\__________________________________________________________________________//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
        Elevate-Script ; Display-TrueColors ; Make-Decision     #//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\______________________________________________________________\\__//__\\__//__\\__//__\\__//__\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\    __________________________________________________________    //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//    Secure Digits Plus LLC | Hybrid | Desired State Controller    \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯      ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯     ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯  -=-=-=-=-=-=-=[ Dynamically Engineered Digital Security ]-=-=-=-=-=-=--=-= ¯¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\    ¯¯¯¯¯¯¯¯¯¯¯¯¯¯                                           ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯    //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//   Application Development | Virtualization | Network and Hardware Magistration   \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\   ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯   //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//   https://www.securedigitsplus.com | Server-Client | Seedling-Spawning Script    \\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__ ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ___//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\   [ Provisional Author : Michael C Cook Sr. | "The Buck Stops Here" ]    //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//
#//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//   ____________________________________________________________________   \\  //¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\__//¯¯\\
#\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//__\\__//
#//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\--//--\\
#\\¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯//
